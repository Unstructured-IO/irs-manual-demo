[
  {
    "element_id": "57c80547a4fb7190d2719c112b3ccd74",
    "text": "Department of the Treasury Internal Revenue Service",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "53a37ecaf141eaca6b581fc349629dc4",
    "text": "This transmits revised Internal Revenue Manual (IRM) 2.5.11, Systems Development, Analysis Techniques and Deliverables.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "62d70d10e335238b6d0c74fd8010e063",
    "text": "This IRM 2.5.11 authorizes the standards, techniques, and other controls for Structured Analysis and Structured Design (SA/SD) which is currently the system development techniques for all IRS IT related government employees and contractual workers. This manual was developed to establish analysis techniques and deliverable descriptions for system development.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "f47a87872d06f37d3aace49548f2b589",
    "text": ") Changed Acting Chief Information Officer to , Nancy A. Sieger Chief Information Officer (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "ba5ec51d07a4ac0e951608704431d59a",
    "text": ")",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "4a7dd0ac470e1e129aa025a87e830750",
    "text": ", Corrected the Title from“",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "2a7279d8c2760be0df511a557b0be690",
    "text": "Responsibilities Roles and Responsibilities ”to“ Roles Responsibilities” (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "ba5ec51d07a4ac0e951608704431d59a",
    "text": ")",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "5004dc5825d85f16b99e857faf418768",
    "text": "), Changed responsibilities for Director, Customer Service Directs and oversees Customer Service Support for service and communication with internal and external customers providing taxpayers with self-service online capabilities. a. Customer Service Domain’s applications and systems provide: Tax law assistance Taxpayer education Access to taxpayer account data Maintenance of modernized information systems that meet the customer’s needs for researching, updating, analyzing, and managing taxpayer accounts b. Services to internal and external customers are provided through ﬁve primary means: Centralized Contact Centers (for telephone, written, and electronic inquiries) Self-service applications (via the telephone and Internet) Field Assistance (for walk-in assistance) Web Services Management of Taxpayer Accounts (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "ba5ec51d07a4ac0e951608704431d59a",
    "text": ")",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "3399c5674320749fd87a6a0c6465ab7d",
    "text": ") (a-d), Added new section - Structured Analysis Important Implementation Steps (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "ba5ec51d07a4ac0e951608704431d59a",
    "text": ")",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "5846a89f54a5b957fe7cf13a9a8d9897",
    "text": "), Divided this paragraph into two for better readability (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "ba5ec51d07a4ac0e951608704431d59a",
    "text": ")",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "450be55098663926655c8924b1575028",
    "text": ") (a), Corrected parenthesis for (also known as actors, sources or sinks, and terminators) (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "ba5ec51d07a4ac0e951608704431d59a",
    "text": ")",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "285bd7fd0726ca252b9902926eb16636",
    "text": "), Changed bullets to alphalist (a-d) for better readability (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "ba5ec51d07a4ac0e951608704431d59a",
    "text": ")",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "0829e22871ff266a49e63aeff8fbf32b",
    "text": "), Changed bullets to alphalist (a-b) for better readability (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "ba5ec51d07a4ac0e951608704431d59a",
    "text": ")",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "5d183eab252b179457f160b2f61be547",
    "text": "), Changed bullets to alphalist (a-g) for better readability (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "ba5ec51d07a4ac0e951608704431d59a",
    "text": ")",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "7c6e02281d2107434ca6b1cac6a7b59a",
    "text": "), Changed the title to Bold for consistency No.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "7f10293ee7f13330438c899f8b66be0a",
    "text": "Q (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "6726c0a6ddbc7e77d189e9318f57a047",
    "text": ") Internal Revenue Manual",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "6c1ef496d70325b9328fd2f2fa5b3b85",
    "text": "Changed Acting Chief Information Officer to , Nancy A. Sieger Chief Information Officer",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "ba5ec51d07a4ac0e951608704431d59a",
    "text": ")",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "4a7dd0ac470e1e129aa025a87e830750",
    "text": ", Corrected the Title from“",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "57275639747c5a39c2418546417a72a3",
    "text": "Responsibilities Roles and Responsibilities ”to“ Roles and Responsibilities” (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "ba5ec51d07a4ac0e951608704431d59a",
    "text": ")",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "5dd0b0d6fae4354cc7a6c5b5fe1caea7",
    "text": "), Changed responsibilities for Director, Customer Service Directs and oversees Customer Service Support for service and communication with internal and external customers and providing taxpayers with self-service online capabilities. a. Customer Service Domain’s applications and systems provide:",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "6b9e22f60c110118de7864c692e34e39",
    "text": "Customer Service Domain’s applications and systems provide: Tax law assistance Taxpayer education Access to taxpayer account data Maintenance of modernized information systems that meet the customer’s needs for researching, updating, analyzing, and managing taxpayer accounts Services to internal and external customers are provided through ﬁve primary means: Centralized Contact Centers (for telephone, written, and electronic inquiries) Self",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "376d025e9780d0570246aaaa42d3c9e2",
    "text": "service applications (via the telephone and Internet) Field Assistance (for walk",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "7e90dc7b2f8cd94fc61ce62112751288",
    "text": "in assistance) Web Services Management of Taxpayer Accounts",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "e74e27bf727633f61a24ad1bc908361a",
    "text": "2.5.11.3.1 (1) (a-d), Added new section - Structured Analysis Important Implementation Steps",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "252791f91ca994c17cf554555f61e914",
    "text": "2.5.11.4.2 (1), Divided this paragraph into two for better readability",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "061ceb2abeffa86334ae94666e0cf2b9",
    "text": "2.5.11.4.2.12.5 (1), Changed bullets to alphalist (a-b) for better readability",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "c0086719255558beceda50b68a434aeb",
    "text": "2.5.11.4.3.2 (1), Changed bullets to alphalist (a-g) for better readability",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 1
    }
  },
  {
    "element_id": "2465548b94a9380f1b7fc8b01e0e2b8f",
    "text": "2.5.11.4.2.12.11 (1), changed bullets to alphalist (a-c) for better readability",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 2
    }
  },
  {
    "element_id": "1e4617219c40c0e9225e041094ec05ce",
    "text": "2.5.11.5.8 (1), Added the purpose of Computer-Aided System Engineering (CASE) Tools for description of all tools under speciﬁc System Development analysis programs",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 2
    }
  },
  {
    "element_id": "dd5d884d95c749a6e25748ec6dcc0643",
    "text": "2.5.11.5.8 (2) (a) (b) (c) (d) Added the types of CASE tools",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 2
    }
  },
  {
    "element_id": "af7eb7522b5e02ce021377b88c59cc06",
    "text": "2.5.11.5.9, Changed the section title to Rapid Application Development Model to Joint Application Development (JAD) Methodology because JAD was moved to another section",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 2
    }
  },
  {
    "element_id": "a372f0d141c76a924d1c0e426a4e5f96",
    "text": "Exhibit 2.5.11-6 Terms/Deﬁnitions, Added Rational Team Concert - IBM Engineering Workﬂow Management is a collaborative software development tool that teams use to manage all aspects of their work, such as iteration and release planning, change management, defect tracking, source control, and build automation",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 2
    }
  },
  {
    "element_id": "590605862d88f500b88e802fb61686a4",
    "text": "EFFECT ON OTHER DOCUMENTS",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 2
    }
  },
  {
    "element_id": "1e40feedb6d8e174d473a369b3da23fd",
    "text": "AUDIENCE",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 3
    }
  },
  {
    "element_id": "7fc5aa30b7b4b54b49f054516925cf32",
    "text": "The audience intended for this transmittal is personnel responsible for engineering, developing, and maintaining Agency software systems identiﬁed in the Enterprise Architecture. This engineering, development, and maintenance include that performed by government employees as well as contractors.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 3
    }
  },
  {
    "element_id": "a9360e0212a4d173581c91da68494d02",
    "text": "Table of Contents",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 5
    }
  },
  {
    "element_id": "bdad8ed18f97d709e881b2c2f5be2210",
    "text": "Attributes and Cross-References",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 7
    }
  },
  {
    "element_id": "17ccfa5b681e3e7b293165981520187d",
    "text": "Maintenance",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 7
    }
  },
  {
    "element_id": "9c06043b40f8f02b20e45d35a15e83df",
    "text": "Computer-Aided System Engineering (CASE) Tools",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 7
    }
  },
  {
    "element_id": "79b4e374f96910eb6f0cae52a4f12c97",
    "text": "Advantages of the CASE Models",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 7
    }
  },
  {
    "element_id": "f329664d81cc35e70ca6ade0441d279c",
    "text": "Joint Application Development (JAD) Methodology",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 7
    }
  },
  {
    "element_id": "30fccf5a09e1474d66b6bb32c709f36c",
    "text": "Rapid Application Development (RAD) Methodology",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 7
    }
  },
  {
    "element_id": "ab7598525c91dfd227b48f77469ca425",
    "text": "IRS Prototyping/Visualization Overview",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 7
    }
  },
  {
    "element_id": "71586e96f2b5fcbee0bd184d5775529f",
    "text": "Functional Speciﬁcation Package (FSP)",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 7
    }
  },
  {
    "element_id": "bc62105eda54d9f2ede4fc7b6b01a148",
    "text": "Data Flow Diagrams and Process Speciﬁcations",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 7
    }
  },
  {
    "element_id": "30b60f06026cb5a0e14dab4fdfe2c070",
    "text": "Data Deﬁnitions",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 7
    }
  },
  {
    "element_id": "55c4b7f274a292ee9e827439024925e3",
    "text": "Screen Displays",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 7
    }
  },
  {
    "element_id": "754c22b481846b2a1a4452482660dab5",
    "text": "Reports/Layouts",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 7
    }
  },
  {
    "element_id": "220ccd99eca215af19756d949e610aab",
    "text": "Table of Contents/Cross References",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 7
    }
  },
  {
    "element_id": "74b8c7d2ad8b4e229e788a497f6952ac",
    "text": "Format for a Leveled Data Flow Diagram Symbols Used to Deﬁne Data A Procedure described using a Narration, then using a Decision Table Common Process Speciﬁcation Example Acronyms/Terms Terms/Deﬁnitions",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 7
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "6183734f9d73d0e0e9b1faae808d2262",
    "text": ") Scope : The guidelines, standards, techniques, and other controls established in this manual apply to all software developed for the Internal Revenue Service. This development includes work performed by government employees as well as contractors. For system development purposes, the controls estab- lished in this manual may be used with any agency approved life cycle, e.g., Software Development Life Cycle (SDLC) and/or Enterprise Architecture (EA), Enterprise Life Cycle (ELC). (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "8c8c93222d91474dc5ae88112d56e6fd",
    "text": ") Purpose : This manual describes techniques for modeling processes/data among these processes, deﬁning data, and specifying processes. This manual is distributed to promote the development of business models that are easy understand, change, and maintain. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "c279ba4656db74561bf27ce7fc0362fd",
    "text": ") Audience : This manual applies to Information Technology (IT) managers and personnel responsible for engineering, developing, or maintaining agency software systems identiﬁed in the Enterprise Architecture. This engineering, development, and maintenance include that performed by government employees as well as contractors. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "3b51a04904e639c478e8261afe5ed00b",
    "text": ") Policy Owner : The Chief Information Officer is the authority for this IRM. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "7258d4e0687d18005f70f2578ef9d4b6",
    "text": ") Program Owner : The Information Technology, Application Development (AD) Director of Technical Integration Office is responsible for the administration, procedures, and updates related to the program. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "33ec22a5cfe182948c86f6e0698791fc",
    "text": ") Primary Stakeholders : The software developers and business owners of Internal Revenue Service are stakeholders for the guidelines, standards, tech- niques, and other controls established in this manual. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "10acac55d6525d4031f66c21b438c095",
    "text": ") Program Goals : The attached IRM establishes standards, techniques, and other controls for analyzing business processes and data. This manual was updated to reﬂect revised guidance for techniques and deliverable descriptions for systems development. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "9fc9d4a5b0585cae583e396bc1699f68",
    "text": ") Structured analysis is a technique that involves analysis, description, speciﬁca- tion, and decomposition of business processes and data to derive a result is: graphic and concise, non-redundant, top-down partitioned, and logical instead of physical. This technique uses logical models to enhance communi- cation by emphasizing what (logically) needs to be designed, and not how (physically) to design it. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "526aafeacaa48264febea1db8b33d4e8",
    "text": ") Data ﬂow diagrams, data deﬁnitions, and process speciﬁcations are the tools used in structured analysis. The primary deliverable that results from applying structured analysis is the functional speciﬁcation package. This deliverable comprises data ﬂow diagrams, data deﬁnitions, and process speciﬁcations. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "9152f9d080cb665f1cb7554ed5e6acef",
    "text": ") IRM",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "052b08c2810e81843c035a16db248eae",
    "text": "System Development, is the overarching IRM for all System Devel- opment programs within the IRS (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "9152f9d080cb665f1cb7554ed5e6acef",
    "text": ") IRM",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "ffa807044dde54c9973b573f0f6e1af3",
    "text": "Security, Privacy and Assurance, Privacy and Information Protec- tion, Privacy Policy (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "9152f9d080cb665f1cb7554ed5e6acef",
    "text": ") IRM",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "c1af948c03fc6285d1cdb79f791e8e12",
    "text": "Security, Privacy and Assurance, Information Technology (IT) Security, Application Security and Development (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "f3e265cd49102eab0d03789613726029",
    "text": ") Clinger-Cohen Act of",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "093ce1abf44841d908e192d54f6e4e16",
    "text": "Techniques and Deliverables",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "ef51e648dfc814b76990088c13114222",
    "text": "page (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "6726c0a6ddbc7e77d189e9318f57a047",
    "text": ") Internal Revenue Manual",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "334359b90efed75da5f0ada1d5e6b256",
    "text": "#",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "1baeaf6918226a39e36f6671b3756fbc",
    "text": "Analysis Techniques and Deliverables 2.5.11",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "b9e7e82d2793de9c51befb309b16f750",
    "text": "Structured analysis is a technique that involves analysis, description, speciﬁca- tion, and decomposition of business processes and data to derive a result that is: graphic and concise, non-redundant, top-down partitioned, and logical instead of physical. This technique uses logical models to enhance communi- cation by emphasizing what (logically) needs to be designed, and not how (physically) to design it.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "49789006e32ab2fd0c94f68e3cf83ae5",
    "text": "IRM 10.8.6 Security, Privacy and Assurance, Information Technology (IT) Security, Application Security and Development",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 9
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "565a9d7bb3ac8f34b8222549d7ca370e",
    "text": ") Federal Information Security Modernization Act of",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "d231cd78a2f5c5c45d7142da93643d0a",
    "text": ", FISMA",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "d07111de9ec8b258b8ad1c66f25e607f",
    "text": ") The Office of Management and Budget (OMB) (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "d85680a7a5ed2c8a5c3da6b5b7941cc3",
    "text": ") Government Performance Results Act,",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "4307f09295c10b6f117e2a1a2cbe12ba",
    "text": ") Treasury Inspector General Tax Administration (TIGTA) (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "84da54a6de154b77b17eff6a22edaaa7",
    "text": ") Information Technology (IT), Cybersecurity : Cybersecurity manages the IT Security program in accordance with the Federal Information Security Man- agement Act with the goal of delivering effective and professional customer service to business units and support functions within the IRS. These proce- dures are done as the following: a. Provide valid risk mitigated solutions to security inquisitions. b. Respond to incidents quickly and effectively in order to eliminate risks/ threats. c. Ensure all IT security policies and procedures are actively developed, and updated. d. Provide security advice to IRS constituents, and proactively monitor IRS robust security program for any required modiﬁcations or enhancements. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "977f44bc65cbed299e80a860ff524f26",
    "text": ") Director, Enterprise Operations (EOps), Data Management Services & Support (DMSS) : Directs and oversees reliable database and storage opera- tions by pioneering improvements in data services. Other responsibilities are as follows: • Plan, build, operate, and maintain the IRS’s data management technologies/processes • Ensure level",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "6201111b83a0cb5b0922cb37cc442b9a",
    "text": "and",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "60f80b6b33c951d0f51b0fd2cb8179a0",
    "text": "support is administered to address customer database requirements (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "fbb7df56a8ad9a4eaf60f4c9746c1b76",
    "text": ") Applications Development (AD) : AD is responsible for building, testing, ering, and maintaining integrated information applications systems, e.g., software solutions, to support modernized systems and production environment to achieve the mission and objectives of the Service. Additional, AD is respon- sible for the following: AD works in partnership with customers to improve the quality of and deliver changes to IRS information systems products and services Establishes and maintains rigorous contract and ﬁscal management, oversight, quality assurance, and program risk management processes to ensure that strategic plans and priorities are being met Maintains the effectiveness and enhance the integration of IRS installed base production systems and infrastructure while modernizing core business systems and infrastructure Provides quality assessment/assurance of deliverables and processes. cation Development’s (AD) chain of command and responsibilities include: a. Commissioner : Oversees and provides overall strategic direction for IRS. The Commissioner’s and Deputy Commissioner’s main focus is the IRS’s services programs, enforcement, operations support, and orga- nizations. Additionally, the Commissioner’s vision is enhance services the nation’s taxpayers, balancing appropriate enforcement of the nation’s tax laws while respecting taxpayers’ rights. b. Deputy Commissioner, Operation Support (DCOS) : Oversees the erations of Agency-Wide Shared Services: Chief Financial Officer, Human",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "f96747c3542394248a841f09315b3547",
    "text": "Systems Development Internal Revenue Manual Cat. No.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "7f10293ee7f13330438c899f8b66be0a",
    "text": "Q (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "ed858095adc7701dcfcf5473eebbd27d",
    "text": ") Any line marked with is for Official Use",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "16fad4b898077b5dad1ecc332d24d55d",
    "text": "Federal Information Security Modernization Act of 2014, FISMA 2014",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "20130045042541831f102ac2d63136bc",
    "text": "a. Provide valid risk mitigated solutions to security inquisitions. b. Respond to incidents quickly and effectively in order to eliminate risks/ threats. c. Ensure all IT security policies and procedures are actively developed, and updated. d. Provide security advice to IRS constituents, and proactively monitor IRS robust security program for any required modiﬁcations or enhancements.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "46f7a01d7948c587a0dc5c81b669f40c",
    "text": "Provides quality assessment/assurance of deliverables and processes. Appli- Development’s (AD) chain of command and responsibilities include:",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "3da2cb3f5a42d3105ed4a62853006eb4",
    "text": "a. Commissioner : Oversees and provides overall strategic direction for the IRS. The Commissioner’s and Deputy Commissioner’s main focus is for the IRS’s services programs, enforcement, operations support, and orga",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "7d39cd7ccfc9160c76424fe8f7778d57",
    "text": "nizations. Additionally, the Commissioner’s vision is enhance services to the nation’s taxpayers, balancing appropriate enforcement of the nation’s tax laws while respecting taxpayers’ rights. b. Deputy Commissioner, Operation Support (DCOS) : Oversees the op",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "68a1c623fdb779b15554d8894c4fbac7",
    "text": "erations of Agency",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "79f61273dbff0bb666512c48ef884ba3",
    "text": "Wide Shared Services: Chief Financial Officer, Human",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "c41b0e6418a7d1888a1c2d0c836bdb6a",
    "text": "Deputy Commissioner, Operation Support (DCOS) : Oversees the op- erations of Agency-Wide Shared Services: Chief Financial Officer, Human",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 10
    }
  },
  {
    "element_id": "1baeaf6918226a39e36f6671b3756fbc",
    "text": "Analysis Techniques and Deliverables 2.5.11",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 11
    }
  },
  {
    "element_id": "9c11da868e20a25c20ff73ad10bb8212",
    "text": "Capital Office, Information Technology, Planning Programming and Audit Oversight and Privacy, and Governmental Liaison and Disclosure. c. Chief Information Officer (CIO) : The CIO leads Information Technology, and advises the Commissioner on Information Technology matters, manages all IRS IT resources, and is responsible for delivering and taining modernized information systems throughout the IRS. Assisting Chief Technology Officer (CTO) is the Deputy Chief Information Officer Operations. d. Application Development (AD) Associate Chief Information Officer (ACIO) : The AD ACIO reports directly to the CIO; oversees and ensures the quality of: building, unit testing, delivering, and maintaining integrated enterprise-wide applications systems to support modernized and legacy systems in the production environment to achieve the mission of the Service. AD works in partnership with customers to improve the quality and deliver changes to IRS information systems products and services. e. Deputy AD Associate CIO (ACIO) : The Deputy AD ACIO reports directly to the AD ACIO, and is responsible for: Leading strategic priorities to enable the AD Vision, IT Technology Roadmap and the IRS future state Executive planning and management of the development organization which ensures all ﬁling season programs are developed, tested, and delivered on-time and within budget (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 11
    }
  },
  {
    "element_id": "f8c2c2d633e93840e5fefb43056e6205",
    "text": ") AD has the following Domains: Compliance Domain Corporate Data Domain Customer Service Domain Data Delivery Service (DDS) Domain Delivery Management; Quality Assurance (DMQA) Domain Identity & Access Management (IAM) Organization Domain Internal Management Domain Submission Processing Domain Technical Integration Organization (TIO) Domain (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 11
    }
  },
  {
    "element_id": "840cf2e95a5b255461b1853c634b9f09",
    "text": ") Director, Compliance : Provides executive direction for a wide suite of Compli- ance focused applications, and oversees the IT Software Development organization to ensure the quality of production ready applications. Directs oversees a uniﬁed cross-divisional approach to compliance strategies needing collaboration pertaining to the following: a. Abusive tax avoidance transactions needing a coordinated response b. Cross-divisional technical issues c. Emerging issues d. Service-wide operational procedures (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 11
    }
  },
  {
    "element_id": "8d79daca5bdd00f76d025fd72d5638dc",
    "text": ") Director, AD Corporate Data : Directs and oversees the provisioning of au- thoritative databases, refund identiﬁcation, notice generation, and reporting. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 11
    }
  },
  {
    "element_id": "2d601ff86fd9994cf64008ef6784b62c",
    "text": ") Director, Customer Service : Directs and oversees Customer Service Support for service and communication with internal and external customers and providing taxpayers with self-service online capabilities. a. Customer Service Domain’s applications and systems provide: Tax law assistance Taxpayer education Access to taxpayer account data Internal Revenue Manual",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 11
    }
  },
  {
    "element_id": "0422cf7af505169ecccb2d042ece8b9c",
    "text": "Capital Office, Information Technology, Planning Programming and Audit Oversight and Privacy, and Governmental Liaison and Disclosure. c. Chief Information Officer (CIO) : The CIO leads Information Technology, and advises the Commissioner on Information Technology matters, manages all IRS IT resources, and is responsible for delivering and main",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 11
    }
  },
  {
    "element_id": "9c3fc949511d3f9d1907afa8039316e2",
    "text": "taining modernized information systems throughout the IRS. Assisting the Chief Technology Officer (CTO) is the Deputy Chief Information Officer Operations. d. Application Development (AD) Associate Chief Information Officer (ACIO) : The AD ACIO reports directly to the CIO; oversees and ensures the quality of: building, unit testing, delivering, and maintaining integrated enterprise",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 11
    }
  },
  {
    "element_id": "9b276bf0203b151cd9c554a8f36d32cb",
    "text": "wide applications systems to support modernized and legacy systems in the production environment to achieve the mission of the Service. AD works in partnership with customers to improve the quality and deliver changes to IRS information systems products and services. e. Deputy AD Associate CIO (ACIO) : The Deputy AD ACIO reports directly to the AD ACIO, and is responsible for: Leading strategic priorities to enable the AD Vision, IT Technology Roadmap and the IRS future state Executive planning and management of the development organization which ensures all ﬁling season programs are developed, tested, and delivered on",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 11
    }
  },
  {
    "element_id": "8012340d09b889a93bef50241c195aa6",
    "text": "time and within budget",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 11
    }
  },
  {
    "element_id": "c531a32daef905c559f1a83dc3389e4d",
    "text": "Director, AD Corporate Data : Directs and oversees the provisioning of au- thoritative databases, refund identiﬁcation, notice generation, and reporting.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 11
    }
  },
  {
    "element_id": "7cf1853adead8866cdc73925486506d2",
    "text": "Customer Service Domain’s applications and systems provide: Tax law assistance Taxpayer education Access to taxpayer account data",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 11
    }
  },
  {
    "element_id": "8c53decd282fc6dbf2bae7c4e1c9233a",
    "text": "Maintenance of modernized information systems that meet the cus- tomer’s needs for researching, updating, analyzing, and managing taxpayer accounts b. Services to internal and external customers are provided through ﬁve primary means: Centralized Contact Centers (for telephone, written, and electronic inquiries)(cid:",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 12
    }
  },
  {
    "element_id": "f6efa79cd0408706ce203398b8e57549",
    "text": ")Self-service applications (via the telephone and Internet) Field Assistance (for walk-in assistance) Web Services Management of Taxpayer Accounts (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 12
    }
  },
  {
    "element_id": "6b1df7782674f77fd495415049482198",
    "text": ") Director, Data Delivery Services : Directs, oversees, and ensures the quality of data with repeatable processes in a scalable environment. The enterprise data strategy is to transform DDS into a data centric organization dedicated deliver Data as a Service (Da",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 12
    }
  },
  {
    "element_id": "075c236195bc9538ade9c9da0bdd0820",
    "text": ") through: • Innovation - new methods and discoveries • Motivate - incent and enable individuals • Renovation - streamline or automate (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 12
    }
  },
  {
    "element_id": "8628af1c664c94df60ab0c735cb3e218",
    "text": ") Director, Delivery Management; Quality Assurance (DMQA) : Executes the mission of DMQA by ensuring AD has a coordinated, cross-domain, and cross- organizational approach to delivering AD systems and software applications. Additionally, the DMQA Director reports to the AD ACIO, and chairs the AD Risk Review Board. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 12
    }
  },
  {
    "element_id": "ac91868b7321681255f3e5df8f210b22",
    "text": ") Director, Identity & Access Management (IAM) : Provides oversight and direction for continual secure online interaction by verifying and establishing individual’s identity before providing access to taxpayer information “identity prooﬁng”, while staying compliant within federal security requirements. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 12
    }
  },
  {
    "element_id": "71b88ab4c1397e880780aadaab2f020a",
    "text": ") Director, Internal Management : Provides oversight for the builds, tests, deliv- eries, refund identiﬁcation, notice generation, and reporting. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 12
    }
  },
  {
    "element_id": "160f7183c2d7b286745debf58844adbf",
    "text": ") Director, Submission Processing : Provides oversight to an organization of over",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 12
    }
  },
  {
    "element_id": "d03502c43d74a30b936740a9517dc4ea",
    "text": ",",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 12
    }
  },
  {
    "element_id": "71815e7f87a06a70e15dfbffb5bc0369",
    "text": "employees comprised of: a headquarters staff responsible for de- veloping program policies and procedures, and ﬁve Wage& Investment processing centers. Additionally, the Director, Submission Processing is re- sponsible for processing over",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 12
    }
  },
  {
    "element_id": "23d76dd3e06e12341f6e8661816f2771",
    "text": "million individual and business tax returns through both electronic and paper methods. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 12
    }
  },
  {
    "element_id": "5534f88de3f703ce62546a50be5e61b8",
    "text": ") Director, Technical Integration : Provides strategic technical organization oversight ensuring applicable guidance, collaboration, consolidation of technical integration issues and quality assurance for the Applications Development portfolio. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 12
    }
  },
  {
    "element_id": "c85bb59ec026d1225e436f74b2a5e60d",
    "text": ") Program Reports : • Model driven requirement document • Customer requirement • Business requirement decomposition • Business physical data ﬂow diagram • Business logical data ﬂow diagram (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 12
    }
  },
  {
    "element_id": "c09171560cfca10fca4858772cf2114b",
    "text": ") Program Effectiveness :",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 12
    }
  },
  {
    "element_id": "f96747c3542394248a841f09315b3547",
    "text": "Systems Development Internal Revenue Manual Cat. No.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 12
    }
  },
  {
    "element_id": "7f10293ee7f13330438c899f8b66be0a",
    "text": "Q (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 12
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 12
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 12
    }
  },
  {
    "element_id": "bc1741f1b3ab9be0441ee8b41a2fc9c9",
    "text": ") Any line marked with a is for Official Use",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 12
    }
  },
  {
    "element_id": "84335d777d0b76caf796f05440c3188f",
    "text": "Maintenance of modernized information systems that meet the cus- tomer’s needs for researching, updating, analyzing, and managing taxpayer accounts Services to internal and external customers are provided through ﬁve primary means: Centralized Contact Centers (for telephone, written, and electronic inquiries)(cid:",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 12
    }
  },
  {
    "element_id": "3ec0fb2f3bf113b436f5612f2c1a8055",
    "text": ")Self-service applications (via the telephone and Internet) Field Assistance (for walk-in assistance) Web Services Management of Taxpayer Accounts",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 12
    }
  },
  {
    "element_id": "8eb491a0f69a8107d7d2ced2f0f5c20d",
    "text": "Director, Identity & Access Management (IAM) : Provides oversight and direction for continual secure online interaction by verifying and establishing an individual’s identity before providing access to taxpayer information “identity prooﬁng”, while staying compliant within federal security requirements.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 12
    }
  },
  {
    "element_id": "febbcb2ff16de25bf3c200f9338a6521",
    "text": "Director, Internal Management : Provides oversight for the builds, tests, deliv- eries, refund identiﬁcation, notice generation, and reporting.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 12
    }
  },
  {
    "element_id": "1baeaf6918226a39e36f6671b3756fbc",
    "text": "Analysis Techniques and Deliverables 2.5.11",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 13
    }
  },
  {
    "element_id": "c72eca908220b82f8df3bd84103b8b07",
    "text": "• Using special conventions on Model Data Flows • Leveling Data Flow Diagrams • Identify and balancing Data Flow Diagrams Controls (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 13
    }
  },
  {
    "element_id": "41fabdc0b79815d849542eff15f0a9b6",
    "text": ") The Requirements Engineering Program Office of Business Planning and Management (BPRM) is the IRS authority on providing standards and guidance to Requirements Engineering activities, process modeling, and requirements-related solutions. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 13
    }
  },
  {
    "element_id": "cb0cf72fcc65b469eb212b59466c3d65",
    "text": ") This office oversees Requirements Development and Requirements Manage- ment efforts on all business change, software development, systems integration, and legacy system upgrades throughout IRS Information Technol- ogy. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 13
    }
  },
  {
    "element_id": "6a029a84d9895702d9b2ea7ef48d97bc",
    "text": ") For Acronyms/Terms, see Exhibit",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 13
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 13
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 13
    }
  },
  {
    "element_id": "1b37169c95ea59e32087681d96232273",
    "text": ") For Terms/Deﬁnitions, see Exhibit",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 13
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 13
    }
  },
  {
    "element_id": "1cebf8085419dc4b3961d92f10621c68",
    "text": "Resources (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 13
    }
  },
  {
    "element_id": "d1bed77020975a959ce333e10f871e6c",
    "text": ") Object Management Group (OMG), https://www.omg.org/ (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 13
    }
  },
  {
    "element_id": "dc0cfee288b145da6d714dd4ca457ae1",
    "text": ") Tutorials Point, https://www.tutorialspoint.com/system_analysis_and_design/ system_analysis_and_design_structured.htm",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 13
    }
  },
  {
    "element_id": "a409f4ec3d9105965a3be35ef783f3f8",
    "text": "Using special conventions on Model Data Flows Leveling Data Flow Diagrams Identify and balancing Data Flow Diagrams",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 13
    }
  },
  {
    "element_id": "2053334959004c8cc8b9581919b5d414",
    "text": "Tutorials Point, https://www.tutorialspoint.com/system_analysis_and_design/ system_analysis_and_design_structured.htm",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 13
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 13
    }
  },
  {
    "element_id": "8fee7cab37a849319270324e70dfc4c5",
    "text": ") Model Driven Architecture (MDA) was launched by the Object Management Group during",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 13
    }
  },
  {
    "element_id": "344de6e4cc0d9c8ba6de22d8d7a9ff42",
    "text": ", and is an approach to separating business-level functional- ity from technical speciﬁcations of implementations. The objective of this methodology is to permit business-level functionality to be modeled using standards such as Uniﬁed Modeling Language (UML), and Business Process Modeling Notation (BPMN) to allow the models to exit without platform con- straints and requirements; then instantiate the models into speciﬁc runtime executions. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 13
    }
  },
  {
    "element_id": "2273611fecbd861bcc38c0b5ed5759fb",
    "text": ") The Structured Analysis method is based on a meticulous style consisting of using graphical tools that analyze and perfect the objectives of an existing system while developing new system speciﬁcations. This development method has the following features: a. It is graphical and describes the presentation of application. b. It identiﬁes each process ﬂow of the system. c. It is logical not physical. d. It provides high-level overviews to lower-level elements. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 13
    }
  },
  {
    "element_id": "b0af72f8de4373242f6e39c69ac6f8be",
    "text": ") Structure Analysis consist of steps taken to design the program and/or system that is necessary for the successful operation of the Agency. The critical imple- mentation steps are as follows:",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 13
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 13
    }
  },
  {
    "element_id": "8fee7cab37a849319270324e70dfc4c5",
    "text": ") Model Driven Architecture (MDA) was launched by the Object Management Group during",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 13
    }
  },
  {
    "element_id": "403d99b14ccb2c4f65221bb54d8749e3",
    "text": ", and is an approach to separating business-level functional- ity from technical speciﬁcations of implementations. The objective of this methodology is to permit business-level functionality to be modeled using standards such as Uniﬁed Modeling Language (UML), and Business Process Modeling Notation (BPMN) to allow the models to exit without platform con- straints and requirements; then instantiate the models into speciﬁc runtime executions.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 13
    }
  },
  {
    "element_id": "da707df4b9973f10b678268bea9d5a16",
    "text": "a. Perform an investigation of the current system, and create a check-list all the identiﬁed current problems. b. Model the newer system based on the issues found after the investiga- tion so the problems can be ﬁxed. c. Model the newer physical environment of the system. d. Investigate and conclude if there are any alternative solutions. e. Choose the best approach for the new system. f. Create all graphical aspects of the new system. g. Ensure all graphical aspects of the new system and/or program are included as artifacts in the Enterprise Architecture (EA), Enterprise Cycle (ELC). (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 14
    }
  },
  {
    "element_id": "b085a7be9dc826834d8892de20dc66b5",
    "text": ") During the Structured Analysis phase diverse tools and techniques are for system development. The tools are the following: • Data Dictionary • Data Flow Diagrams • Decision Trees • Decision Tables • Structured English for Programming Languages (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 14
    }
  },
  {
    "element_id": "a2afbc298ded6398179a46fb5b6eb30d",
    "text": ") The Data Dictionary or Data Deﬁnition Matrix is an effective textual description of data objects, their information such as a descriptive name, the data type, allowed values and units. The Data Dictionary is an effective and concise for obtaining the elements within the dataset. Types of Data Dictionaries a. Active Data Dictionary : Automatically updated by the Database Man- agement System (DBMS) when changes are updated in the database. b. Passive Data Dictionary : This Data Dictionary must be manually updated to reﬂect the database, or the database and dictionary will be unison. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 14
    }
  },
  {
    "element_id": "01ce937f34f2c2ee9286bf03de3fecd1",
    "text": ") Data ﬂow diagrams provide a general picture of the data transformations (processes), and their interfaces (data streams) in a system. Data streams, stores, and processes are deﬁned to make the data ﬂow diagrams more precise. Data deﬁnitions add precision to a system by capturing the details the data streams and data stores. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 14
    }
  },
  {
    "element_id": "0568ab3b28f5bbcecd382e33883cf424",
    "text": ") The means to catalogue these deﬁnitions may vary by organization. However, whether this method is manual, automated, or a combination of the two, standards dictate that project managers ensure consistency within their systems. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 14
    }
  },
  {
    "element_id": "f83e9944b283d96689d98d2e0d1c7ce7",
    "text": ") The Business Process Modeling Notation is a graphical symbol that depicts steps in a business process. Within the BPMN a ﬂow chart describes the of a planned business process from end to end and provides a detailed sequence of business activities and information ﬂows.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 14
    }
  },
  {
    "element_id": "bbc97495cfcb5bb20928b48f3fe31d04",
    "text": "Systems Development",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 14
    }
  },
  {
    "element_id": "d5ef2073cbb3fdd0b6005ef6179f7fee",
    "text": "Perform an investigation of the current system, and create a check",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 14
    }
  },
  {
    "element_id": "5f70543551c877dff50398f9c2f37b5b",
    "text": "list all the identiﬁed current problems. Model the newer system based on the issues found after the investiga",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 14
    }
  },
  {
    "element_id": "0a9217e1bdb05ef02f206c5805b99b7b",
    "text": "tion so the problems can be ﬁxed. Model the newer physical environment of the system. Investigate and conclude if there are any alternative solutions. Choose the best approach for the new system. Create all graphical aspects of the new system. Ensure all graphical aspects of the new system and/or program are included as artifacts in the Enterprise Architecture (EA), Enterprise Life Cycle (ELC).",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 14
    }
  },
  {
    "element_id": "42524930f59f2445e06ff1d5ee42af19",
    "text": "During the Structured Analysis phase diverse tools and techniques are used for system development. The tools are the following:",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 14
    }
  },
  {
    "element_id": "fe62b1047ad859087b1b865754f90c17",
    "text": "The Business Process Modeling Notation is a graphical symbol that depicts the steps in a business process. Within the BPMN a ﬂow chart describes the steps of a planned business process from end to end and provides a detailed sequence of business activities and information ﬂows.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 14
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 15
    }
  },
  {
    "element_id": "9052c03adabc367e125a9ebd3071287c",
    "text": ") A Data Flow Diagram (DFD)is a structured analysis and design graphic tool that illustrates the system as a continuous stream of ongoing data, but does not address physical concerns, i.e., decisions or loops like the traditional ﬂow chart. A data ﬂow diagram emphasizes the ﬂow of data, but not the ﬂow of control. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 15
    }
  },
  {
    "element_id": "bda258bcfdb99194f462ad40da60af31",
    "text": ") DFDs present a logical view of the system, unlike ﬂowcharts, which introduce many physical constraints too early in system development. At a very early stage, DFDs provide a graphic model of the system being developed which can be easily understood by the customer. Areas of misunderstanding are resolved early in system development rather than in a later development where changes have much more impact. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 15
    }
  },
  {
    "element_id": "82dc08dd4ce800d62a8e9762127f6004",
    "text": ") DFDs break-up a system into functional subcomponents. This partitioning in identifying and isolating the various functions of a system. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 15
    }
  },
  {
    "element_id": "0add48fbfac65fb900ed82506fb08a55",
    "text": ") At a higher level, DFDs present system overviews suitable for management brieﬁngs, and provide valid information for communicating with the system designer. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 15
    }
  },
  {
    "element_id": "cd8e0a007da3a749f87822485ad08b86",
    "text": ") DFDs are developed by studying the data from the user’s point of view, and then creating different logical and physical system models. DFDs include the key characteristics: a. Support the Analysis and Requirements stage of System Design. b. A diagramming technique with annotations. c. Graphically depict the boundaries between the system itself, and the external entities where data comes from, or goes to that can represent (humans, systems, or subsystems). d. Display the target system into a network of activities/processes, their terfaces together with origins, destinations, and stores of data. e. Provide Stepwise Reﬁnement through hierarchical decomposition of processes. and Deliverables",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 15
    }
  },
  {
    "element_id": "3660315a9af3df255d8f19ab077e4797",
    "text": "page",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 15
    }
  },
  {
    "element_id": "1baeaf6918226a39e36f6671b3756fbc",
    "text": "Analysis Techniques and Deliverables 2.5.11",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 15
    }
  },
  {
    "element_id": "2afde2249b0b561e4a2e150440569506",
    "text": "Support the Analysis and Requirements stage of System Design. A diagramming technique with annotations. Graphically depict the boundaries between the system itself, and the external entities where data comes from, or goes to that can represent (humans, systems, or subsystems). Display the target system into a network of activities/processes, their in",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 15
    }
  },
  {
    "element_id": "b3c94913687c9bf03f0488e1fcce1517",
    "text": "terfaces together with origins, destinations, and stores of data. Provide Stepwise Reﬁnement through hierarchical decomposition of processes.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 15
    }
  },
  {
    "element_id": "2d54029ba6a55a2aa7da4d9d187093aa",
    "text": "2.5.11.4.2.2.1(12-13-2021) Identifying a Data Flow Diagram",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 15
    }
  },
  {
    "element_id": "e06d304efc992b6b8035425779218406",
    "text": "Title each data ﬂow diagram with the name of its ″ parent’ bubble. The context diagram within a data ﬂow diagram set has no ″ parent ″ diagram; it is the highest-level diagram that identiﬁes the system name, inputs, and outputs.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 15
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "0fb301b9e7a3f51d1d9ee8332cc3e671",
    "text": ") Numbering a Data Flow (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "15244cd97ae2b49eaa88763d0ba4b10b",
    "text": ") Except for the context diagram, each data ﬂow diagram is labeled with the diagram number of its parent bubble. This diagram number is carried over the numbering of the individual bubbles by taking the diagram number, placing a decimal point after it, and then placing a sequential number after the decimal point to give each bubble a unique identiﬁer. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "4be9ec3b925e58113a0ef8d0e800025c",
    "text": ") The diagram number retains the bulk of the numbering and the bubbles are numbered with only the last decimal point number. Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "1fc6a30613bb80255fdf714fc0e2bf36",
    "text": "illustrates the numbering, i.e., the actual process reference numbers of diagram",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "d03502c43d74a30b936740a9517dc4ea",
    "text": ",",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "4aa9bfd2f175a94ad5a7cb321e1aea97",
    "text": ", and",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "1f5be66894e5ef6a6919e1f6499a7c1e",
    "text": "Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "d8b0f6a77782422aeaf2c2c0db648f75",
    "text": "Processes that constitute Process",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "bee24e20c592b0591a9dd0377915adb1",
    "text": ") Exhibit",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "d90206d52961407ce8843ef95f33d621",
    "text": "illustrates a properly numbered data ﬂow diagram.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "13873aac52a2928d7e0a5af9995e8df9",
    "text": ") Balancing Data Flow Diagrams (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "e45338a9b1c475ba071cf975bd69c0c5",
    "text": ") Keep data ﬂow diagrams in balance. Represent in the associated bubbles in the child diagram all data streams shown entering and exiting a parent diagram. There are exceptions to the balance rule-minor error paths and inputs (e.g., error messages, system date) need not be in balance. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "24172b16d3fbada96f52aaa8178d5196",
    "text": ") Show a data store (ﬁle) on the ﬁrst data ﬂow diagram level where all system references to it are shown. Apply this concept at all levels. If a ﬁle is used primarily by the system represented in the context diagram, there is no need show the ﬁle at the context diagram level, however, if the ﬁle is external to system, show it on the context diagram. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "aa2d9184701cbb64c5c3a90ed369fd53",
    "text": ") As an example, Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "aae74bd20e213dfab52b0489891cc187",
    "text": "illustrates a data store or ﬁle not shown in Diagram",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "c47c97ada4a1ed27bbabb94f18ee3405",
    "text": "This is because the ﬁle is internal to the processing in process (as though it is concealed inside the bubble). The ﬁle and all its data streams are shown when process",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "9655c307d166309c45e4c95b3b62815b",
    "text": "is diagrammed.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "1f5be66894e5ef6a6919e1f6499a7c1e",
    "text": "Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "d8b0f6a77782422aeaf2c2c0db648f75",
    "text": "Processes that constitute Process",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "bee24e20c592b0591a9dd0377915adb1",
    "text": ") Exhibit",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "907abb747ba2a4d6e201a7d3db46dbaa",
    "text": "illustrates a properly numbered data ﬂow diagram. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "8607eef22f6a00d045073fad44f76649",
    "text": ") Keep data ﬂow diagrams in balance. Represent in the associated bubbles in the child diagram all data streams shown entering and exiting a parent diagram. There are exceptions to the balance rule-minor error paths and trivial inputs (e.g., error messages, system date) need not be in balance. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "e6ae8ac429491f21a412e80dc0bfb62f",
    "text": ") Show a data store (ﬁle) on the ﬁrst data ﬂow diagram level where all system references to it are shown. Apply this concept at all levels. If a ﬁle is used primarily by the system represented in the context diagram, there is no need to show the ﬁle at the context diagram level, however, if the ﬁle is external to the system, show it on the context diagram. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "aa2d9184701cbb64c5c3a90ed369fd53",
    "text": ") As an example, Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "aae74bd20e213dfab52b0489891cc187",
    "text": "illustrates a data store or ﬁle not shown in Diagram",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "cfce4c4ca33e09dff4c6c238c7f97720",
    "text": "This is because the ﬁle is internal to the processing in process",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "ef9f9ecca6222674947ef60b689efc6e",
    "text": "(as though it is concealed inside the bubble). The ﬁle and all its data streams are shown when process",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "9655c307d166309c45e4c95b3b62815b",
    "text": "is diagrammed.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 16
    }
  },
  {
    "element_id": "19d7cf3054e7c9afaacfe828efff6d7f",
    "text": "Figure 2.5.11-2 Diagram 0 (on the left) and Diagram 3 (on the right) (4) Figure 2.5.11-21 is for Diagram 0 and illustrates a ﬁle being used by processes 2 and 3. Figure 2.5.11-3 Diagram 0 Techniques and Deliverables 2.5.11 page 36327Q (12-13-2021) Internal Revenue Manual 2.5.11.4.2.2.4",
    "type": "FigureCaption",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 17
    }
  },
  {
    "element_id": "043a718774c572bd8a25adbeb1bfcd5c",
    "text": "s",
    "type": "FigureCaption",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 17
    }
  },
  {
    "element_id": "b2f39ab86d71ee1db527402f2f47b384",
    "text": "Figure 2.5.11-2 Diagram 0 (on the left) and Diagram 3 (on the right)",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 17
    }
  },
  {
    "element_id": "d5cf2fab2e342562511de5f85385da08",
    "text": "(4) Figure 2.5.11-21 is for Diagram 0 and illustrates a ﬁle being used by processes 2 and 3.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 17
    }
  },
  {
    "element_id": "ca554dfb7da4e68da15d7a7e3558ac9d",
    "text": "(4) Figure 2.5.11-21 is for Diagram 0 and illustrates a ﬁle being used by 2 and 3. Figure 2.5.11-3 Diagram 0 (12-13-2021) Internal Revenue Manual",
    "type": "FigureCaption",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 17
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "daa01efc71af1ff8c9f1f7df4970e98b",
    "text": ") Types of Data Flow Diagrams (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "b1d13e541ce32615651b89ac9b4b1ec7",
    "text": ") In applying structured analysis, develop and use the following types of data ﬂow diagrams: a. Current physical data ﬂow diagram, see IRM",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "42d47c3e6ba83510e39fd66dcc1563e2",
    "text": "b. Current logical data ﬂow diagram, see IRM",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "8f05749207ec574d67207305a6600153",
    "text": "c. New logical data ﬂow diagram, see IRM",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "7d0191d2f9a176526505a04bbd64e246",
    "text": "d. New physical data ﬂow diagram, see IRM",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "35a58616978568e98453880fab45e3c6",
    "text": ") Current Physical Data Flow Diagram (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "2b79d59f08390c3ab3738db759f4826f",
    "text": ") Use this type of data ﬂow diagram to model the current physical environment. This type of data ﬂow diagram models the physical characteristics of an existing system such as: department names, physical location, organizations, people’s names, and mechanical or operational devices. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "48369972ca19f04ae3218b161278b66e",
    "text": ") Use this type of data ﬂow diagram when modeling a system for the ﬁrst time. Since the user is more familiar with the physical terminology, get the user’s approval of the accuracy of the model of the existing system before continuing analysis.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "431151ea5afcdd0a9fd33d896e38de40",
    "text": ") Current Logical Data Flow Diagram (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "5aba4d741269cbe7f92ecd6da9681a1f",
    "text": ") Make a current physical data ﬂow diagram by removing physical consider- ations and constraints. For instance, replace department names with the actual processing functions within that department. The logical model must depict how the data is being transformed, not who or what is transforming it.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "a0fd518d2c23c76e0997eb90ab18bfa5",
    "text": ") Logical Data Flow Diagram (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "e68865246481b36225bbf5b9fef04cb0",
    "text": ") To accommodate required changes to a system, examine and modify the current logical data ﬂow diagram. Reexamine the rationale behind the why and way processes are done. This model is still logical, and becomes the candidate for the ﬁnal aspect of data ﬂow diagram development.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "227d25390a8555bf57cd9bd03868a549",
    "text": ") Depicting Files on Logical Data Flow Diagrams (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "38ba2b4423e4c2ad69fea62b00b89e5a",
    "text": ") When designating ﬁles on logical data ﬂow diagrams in which data from an old version of a ﬁle is being transformed into data for a new version of that same ﬁle, show the old and new versions of the ﬁle. Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "408e5c7fe9dcfcb23a7dd72b1e90d217",
    "text": "illustrates a data transformation.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "aa30e6203b20fc37f9159b15bd30d8c3",
    "text": "Make a current physical data ﬂow diagram by removing physical consider- ations and constraints. For instance, replace department names with the actual processing functions within that department. The logical model must depict how the data is being transformed, not who or what is transforming it.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "e3b0c44298fc1c149afbf4c8996fb924",
    "text": "",
    "type": "FigureCaption",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "ff37d190670f95f555d5c99dce3f2f29",
    "text": "Figure 2.5.11-4 Data Transformation",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 18
    }
  },
  {
    "element_id": "1baeaf6918226a39e36f6671b3756fbc",
    "text": "Analysis Techniques and Deliverables 2.5.11",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 19
    }
  },
  {
    "element_id": "43a956c027111ac981f243b2db5e1493",
    "text": "Data Flow (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 19
    }
  },
  {
    "element_id": "36665b336c4bdc4c83f62047a50702fd",
    "text": ") The data ﬂow diagrams that result from this technique are the actual maintain- able documentation required within the functional speciﬁcation package. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 19
    }
  },
  {
    "element_id": "e4563df4472e1cc48d13e1d8b9e97202",
    "text": ") In the ﬁnal aspect of data ﬂow diagram development, balance the implementa- tion of the ideal system (as represented by the new logical data ﬂow diagrams) against the realities of time and cost constraints. Consider feasibility and impact studies, cost/beneﬁt analysis, and other variables until an appropriate compromise physical model is selected. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 19
    }
  },
  {
    "element_id": "4d7006c6a9c59547e971c5299d822d79",
    "text": ") Make physical decisions, e.g., which data stores will be data bases as opposed to sequential ﬁles, and consider ″ packaging. ″ (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 19
    }
  },
  {
    "element_id": "039507d25baf1fbe4ae2306bbefb2ed0",
    "text": ") Do not allow the data ﬂow diagrams to become too physical, because this will limit the choices available to the designer. Depict functional processes as opposed to organizational entities affecting the system, e.g., departments or divisions. on Flow (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 19
    }
  },
  {
    "element_id": "d7d433053160ef063895ae7219c5f14b",
    "text": ") If a decision is made during creation of the physical data ﬂow diagram to use single random access ﬁle, designate it on the new physical data ﬂow diagram (but not on the logical data ﬂow diagram). Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 19
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 19
    }
  },
  {
    "element_id": "c91ac54a3a370398208e5719cdad96cf",
    "text": "illustrates random ﬁle access depicted on a data ﬂow diagram.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 19
    }
  },
  {
    "element_id": "c5ca06aa4bd85861b88e7dfb8dce84b8",
    "text": "The data ﬂow diagrams that result from this technique are the actual maintain- able documentation required within the functional speciﬁcation package.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 19
    }
  },
  {
    "element_id": "b5885062c04aa9df73c483143d5ed936",
    "text": "Make physical decisions, e.g., which data stores will be data bases as opposed to sequential ﬁles, and consider ″ packaging. ″",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 19
    }
  },
  {
    "element_id": "e3b0c44298fc1c149afbf4c8996fb924",
    "text": "",
    "type": "FigureCaption",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 19
    }
  },
  {
    "element_id": "05903e0ee92f42e225128caf4f13f574",
    "text": "(2) If the ﬁle is to be sequentially processed, or there is uncertainty how it will be processed, depict the ﬁle on the new physical data ﬂow diagram as Figure 2.5.11-15 illustrates.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 19
    }
  },
  {
    "element_id": "35978db408656d43ad75c5f62a6d1651",
    "text": "e e 118 Eile Processing",
    "type": "FigureCaption",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "1f5be66894e5ef6a6919e1f6499a7c1e",
    "text": "Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "b56367de85335842acfcf30900f259a3",
    "text": "File Processing (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "c66ade3331d098eb29762893406f5a18",
    "text": ") Leveling is the partitioning of a large system into manageable units, resulting system documentation that is easier to comprehend. Top-down analysis and reanalysis of processes and data (partitioning and re-partitioning) produce a high level overview for management and lower, more detailed levels for the designer and users. A leveled data ﬂow diagram set comprises: a. The top-level diagram, called the context diagram, which deﬁnes the boundary of the system and consists of only one bubble that is labeled with an overall system descriptor. The system sources, sinks, inputs, and outputs are depicted; and the input and output data streams are shown to deﬁne the domain of the system. b. Middle-level data ﬂow diagrams are used when it is necessary to represent the system processes within the context diagram broken down into a more detailed level. They are the intermediate level between a context diagram and the functional primitives. c. The lowest-level data ﬂow diagram, called a functional primitive, repre- sents a process that cannot be further decomposed. A functional primitive has no internal data streams and usually only a single input and single output. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "bee24e20c592b0591a9dd0377915adb1",
    "text": ") Exhibit",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "49da6248dd801d04bbddf9df7660006d",
    "text": "Illustrates the format for a leveled data ﬂow diagram. Process (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "1fd0b18f422ba810a579edd7c6a8ea47",
    "text": ") A diagram for which there is a lower level diagram(s) is termed a ″ parent ″ diagram. For instance, in Exhibit",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "31b53ffa92141b467f07b1f68571c6ef",
    "text": ", the context diagram is parent to Diagram",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "096ab58684ffb76f5437a7b5628d9260",
    "text": "which is termed a ″ child ″ diagram. Diagram",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "d2778ba990bc593b1cd5839fba288557",
    "text": "also assumes the role of a parent to Diagram",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "8e8c8179092b2b1181b5c8ce4421f77f",
    "text": ", which is the child of Diagram",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "3bea01271355a6bf12ddfc6c098b8119",
    "text": "Therefore, a diagram can be both a child of a higher level data ﬂow diagram and a parent to a lower level data ﬂow diagram. However, a lowest level (Functional Primitive) data ﬂow diagram can only be a child diagram because it cannot be further decomposed. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "862203d9584c3b36b6ce1ad794809f1f",
    "text": ") Each level of the data ﬂow diagram is to reside on a separate page. The reader can follow the diagram leveling using the diagram and bubble numbering system as a guide. Internal Revenue Manual Cat. No.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "7f10293ee7f13330438c899f8b66be0a",
    "text": "Q (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "ba5ec51d07a4ac0e951608704431d59a",
    "text": ")",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "222c33dcd4ba812a9e676be967e2603b",
    "text": "Figure 2.5.11-6 File Processing",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "8682a33f8b2ec433287f7644051a0b45",
    "text": "Leveling is the partitioning of a large system into manageable units, resulting in system documentation that is easier to comprehend. Top-down analysis and reanalysis of processes and data (partitioning and re-partitioning) produce a high level overview for management and lower, more detailed levels for the designer and users. A leveled data ﬂow diagram set comprises: a. The top-level diagram, called the context diagram, which deﬁnes the boundary of the system and consists of only one bubble that is labeled with an overall system descriptor. The system sources, sinks, inputs, and outputs are depicted; and the input and output data streams are shown to deﬁne the domain of the system. b. Middle-level data ﬂow diagrams are used when it is necessary to represent the system processes within the context diagram broken down into a more detailed level. They are the intermediate level between a context diagram and the functional primitives. c. The lowest-level data ﬂow diagram, called a functional primitive, repre- sents a process that cannot be further decomposed. A functional primitive has no internal data streams and usually only a single input and single output. Exhibit",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "afc21cfdf35a024f7f770d0cd038ed1e",
    "text": "Illustrates the format for a leveled data ﬂow diagram.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "bb78da1440c2aa88acbb7a83d31ef16d",
    "text": ") Leveling is the partitioning of a large system into manageable units, resulting system documentation that is easier to comprehend. Top-down analysis and reanalysis of processes and data (partitioning and re-partitioning) produce a high level overview for management and lower, more detailed levels for the designer and users. A leveled data ﬂow diagram set comprises:",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "b84c2edf90c841bf02cf4eb7dba78f23",
    "text": "2.5.11.4.2.3(12-13-2021) Leveling Data Flow Diagrams",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "1fd0b18f422ba810a579edd7c6a8ea47",
    "text": ") A diagram for which there is a lower level diagram(s) is termed a ″ parent ″ diagram. For instance, in Exhibit",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "31b53ffa92141b467f07b1f68571c6ef",
    "text": ", the context diagram is parent to Diagram",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "096ab58684ffb76f5437a7b5628d9260",
    "text": "which is termed a ″ child ″ diagram. Diagram",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "d2778ba990bc593b1cd5839fba288557",
    "text": "also assumes the role of a parent to Diagram",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "8e8c8179092b2b1181b5c8ce4421f77f",
    "text": ", which is the child of Diagram",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "42f3dd341e6671cca3b55c24116cfead",
    "text": "Therefore, a diagram can be both a child of a higher level data ﬂow diagram and a parent to a lower level data ﬂow diagram. However, a lowest level (Functional Primitive) data ﬂow diagram can only be a child diagram because it cannot be further decomposed.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "ecf1119933cb1a9750a6bb2097652462",
    "text": "Each level of the data ﬂow diagram is to reside on a separate page. The reader can follow the diagram leveling using the diagram and bubble numbering system as a guide.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 20
    }
  },
  {
    "element_id": "1baeaf6918226a39e36f6671b3756fbc",
    "text": "Analysis Techniques and Deliverables 2.5.11",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "a2bd2046b4ca4fad4676e910415b388f",
    "text": ") There is no set number of levels. However, there is always at least a context diagram level and an associated lowest level. The number of middle level diagrams is dependent upon the complexity of the system being deﬁned. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "7bb36ce0bd7e6551f0a65c9de571de7f",
    "text": ") In the interest of readability, partition levels into about seven bubbles (plus or minus two bubbles). of a Data Flow (DFD)Overview (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "8f6dc7a71a12456846662b8f01d883c1",
    "text": ") Data ﬂow diagrams have four main elements as the following: a. External Entity (also known as actors, sources or sinks, and termina- tors): Produce and use data that ﬂows between the entity and the system being diagrammed. The data ﬂows are the inputs/outputs of the DFD, and are normally placed at the boundaries of the diagram because they are external to the system. b. Process : For explanation see IRM",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "eb077cfc7c564c4a9bb8eef651208c99",
    "text": "c. Data Store : For explanation see IRM",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "4f43381827a3953f28c7109640bf9c33",
    "text": "d. Data Flow : For explanation see IRM",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "e93c0b30dcc074214dcfe4c218ddc41d",
    "text": ") Stream (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "75875d79f53ca76bafdecfa986231150",
    "text": ") A data stream is one or more elements of data. A data stream is used to indicate a sharing of data. A data stream is graphically represented by an arrow that shows the direction for which data is being shared. Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "f8de75ee69b872970dc4099de234bfbd",
    "text": "- depicts a data stream.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "d52fb732b71b97b5ab58eac05c53f7a7",
    "text": ") Data Streams/Modiﬁers (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "9e60207bad9f27963b38c83f09e10875",
    "text": ") Label all data streams with meaningful names and applicable naming standards. When a data stream has been logically transformed and this needs to be distinguished, do not create a new data name. Use a modiﬁer to qualify the name and place it in parentheses after the data stream name. Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "4f31a20e6a21356baefca1f09c3878cc",
    "text": "depicts data streams with modiﬁed names.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "ebc20afda704d38bd2b73f194266b6a0",
    "text": "Label all data streams with meaningful names and applicable naming standards. When a data stream has been logically transformed and this needs to be distinguished, do not create a new data name. Use a modiﬁer to qualify the name and place it in parentheses after the data stream name. Figure 2.5.11-7 depicts data streams with modiﬁed names.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "a785f55e9c4eb8139bb2c3e6fe2be54c",
    "text": "TRANSACTION VALID)TRASACTONTRANSACTION pruAL i)",
    "type": "FigureCaption",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "6c23e73e31f90baba762fb212153f029",
    "text": "Figure 2.5.11-7 Data Stream and Data Streams with Modiﬁed Names",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "fb451f8de5f98941ac3724414bb331e5",
    "text": "(1) A router is used to subdivide a data stream or decompose data. A router is graphically represented by a right half circle. Figure 2.5.11- 3 depicts a router.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "cb9c15fa33cd8cc73544e2301ba1d8f7",
    "text": "Figure 2.5.11-8 Router",
    "type": "FigureCaption",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 21
    }
  },
  {
    "element_id": "a6e3db4929848bbe1ebabcead1ad94d1",
    "text": "A collector is used to rebuild data streams or recompose data. A router is graphically represented by a left half circle. Figure 2.5.11- 4 depicts a collector.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 22
    }
  },
  {
    "element_id": "0934e4db18ffb3c4681aefdcc16b17f3",
    "text": "Figure 2.5.11-9 Collector",
    "type": "FigureCaption",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 22
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 22
    }
  },
  {
    "element_id": "f05a689acad1471f17402ea749444fc9",
    "text": ") A split data stream divides the routing of data. Unlike the case with the logical router and logical collector, no decomposing or recomposing of the data stream takes place. A split arrow is used to show the routing of a data stream to two or more destinations. A split data stream is graphically represented by a multi prong arrow. Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 22
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 22
    }
  },
  {
    "element_id": "4698d82a75a891d75b295322c5422ae9",
    "text": "depicts a split data stream as seen below.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 22
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 22
    }
  },
  {
    "element_id": "097aa915291cbce6d6016672a94ffaaa",
    "text": ") A process represents a logical transformation of an incoming data stream(s) into an outgoing data stream(s). A process is a type of object that represents activity and constitutes a data ﬂow diagram. A process name must consist of a transitive verb followed by a subject. Show a process by an ellipse or circle with a process name inside. Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 22
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 22
    }
  },
  {
    "element_id": "27dc608a267d71b8cdec63f3093a91b8",
    "text": "shows these conventions as seen below.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 22
    }
  },
  {
    "element_id": "bb3a4496e76fc9913e911c2e870aa77c",
    "text": "oA .",
    "type": "FigureCaption",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 22
    }
  },
  {
    "element_id": "d2908298ef8218b37a4596a482967fe9",
    "text": "Figure 2.5.11-11 Two Conventions Used to Depict a Process",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 22
    }
  },
  {
    "element_id": "c92c255d5e4838aad5fcfa988ccf440c",
    "text": "(2) For decomposition purposes, three types of processes are acknowledged:",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 22
    }
  },
  {
    "element_id": "371e5d53e2c0ad35380991b4516f77fc",
    "text": "a. Context process : A context process represents the scope of activity being analyzed and modeled. A context process represents the ﬁrst level of decomposition for a related set of data ﬂow diagrams. A context process is a process that comprises other processes and does not con",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 22
    }
  },
  {
    "element_id": "85f4871953b1d4e8c8bbf19b2623ff10",
    "text": "stitute another process. As a rule, a context process may not constitute another process. b. Parent process : A parent process is a process that comprises other processes. As a rule, a parent process must constitute another process and comprise other processes",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 22
    }
  },
  {
    "element_id": "1baeaf6918226a39e36f6671b3756fbc",
    "text": "Analysis Techniques and Deliverables 2.5.11",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 23
    }
  },
  {
    "element_id": "f6fd366a059da23756c86c063716eae7",
    "text": "Elementary process : An elementary process is a process that consti- tutes another process and does not comprise other processes. As a rule, an elementary process must not comprise other processes.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 23
    }
  },
  {
    "element_id": "019633c4156161e455256c71da565068",
    "text": "A Data Store (Database, File, and Table), represented by parallel lines, is a data stream, which is at rest (i.e., a temporary repository of data). Place the data store name between the parallel lines. Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 23
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 23
    }
  },
  {
    "element_id": "a9d9f767c6da6c36d32830482a404b68",
    "text": "illustrates a data store.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 23
    }
  },
  {
    "element_id": "6e050d2ec8b0490ac05311bc54bcd57d",
    "text": "(1) Use the arrows to represent reads, writes, or other accesses to a data store and may be used in any appropriate combination. Figure 2.5.11-14 illustrates the accessing of or reading from a data store.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 23
    }
  },
  {
    "element_id": "388db465724c5bfb27bdb6142580888e",
    "text": "A\\x",
    "type": "FigureCaption",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 23
    }
  },
  {
    "element_id": "3931eb6efc85e7e7af96db010b710c2a",
    "text": "Figure 2.5.11-13 Convention used to depict Reading a Data Store",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 23
    }
  },
  {
    "element_id": "da6fcdf1bdae22fd1d825ad7ef680377",
    "text": "(2) Figure 2.5.11-15 illustrates the updating of or writing to a data store.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 23
    }
  },
  {
    "element_id": "e3b0c44298fc1c149afbf4c8996fb924",
    "text": "",
    "type": "FigureCaption",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 23
    }
  },
  {
    "element_id": "6bfe50f933e90ff284b7d0c18ffdc78b",
    "text": "Figure 2.5.11-14 Convention used to depict Writing to a Data Store",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 23
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 24
    }
  },
  {
    "element_id": "4d12b3cdb1cf9804a31536e93855ab5a",
    "text": ") When diagramming a ﬁle key accessing a data store, the key is optional. Only show the key on a physical data ﬂow diagram (i.e., after it is decided that the ﬁle media will be direct access). Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 24
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 24
    }
  },
  {
    "element_id": "dfd656b862cdee2df872cbdccadb3e5c",
    "text": "illustrates a ﬁle key accessing a data store.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 24
    }
  },
  {
    "element_id": "470ce15c680ff3483332fb03b406a842",
    "text": "Figure 2.5.11-15 Convention used to depict Key Access to a Data Store",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 24
    }
  },
  {
    "element_id": "0797a7b69c22693db43bd4df11793612",
    "text": "When developing logical or physical data ﬂow diagrams, some situations will require the modeling of re-circulating data stores.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 24
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 24
    }
  },
  {
    "element_id": "c8a11e63e19b133b7bd90ba17b72c3d7",
    "text": ") Represent a Source/Sink (e.g., External Entity, External Input and Output) by a rectangle. A source or sink is a person or organization, external to the context of a system that is a net originator or receiver of system data. Place the source/sink name inside the rectangle. Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 24
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 24
    }
  },
  {
    "element_id": "f467c26765a199c2d115d8bee0402721",
    "text": "illustrates a source/sink.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 24
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 24
    }
  },
  {
    "element_id": "7fdf46ac4970abd62bdea29128cff70f",
    "text": ") Introduce a sort as a process bubble only when it is logically required. If the sort process is being shown as a bubble is sorting an input ﬁle, and putting out a sorted ﬁle, then show these ﬁles on the data ﬂow diagram. Name the data stores only, not the data streams.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 24
    }
  },
  {
    "element_id": "ae43e3a434d0763e1d69a0928ae6c68a",
    "text": "(1) Introduce a sort as a process bubble only when it is logically required. If the sort process is being shown as a bubble is sorting an input ﬁle, and putting out a sorted ﬁle, then show these ﬁles on the data ﬂow diagram. Name the data stores only, not the data streams.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 24
    }
  },
  {
    "element_id": "1baeaf6918226a39e36f6671b3756fbc",
    "text": "Analysis Techniques and Deliverables 2.5.11",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 25
    }
  },
  {
    "element_id": "d3513efdc312033729064acb087cdc70",
    "text": "Figure 2.5.11-16 provides an example (of a sequential ﬁle update or an update where the decision as to whether it will be random or sequential has not been made) that illustrates a sort.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 25
    }
  },
  {
    "element_id": "5c9941ac99143977f2408d57accab319",
    "text": "it‘made) fhat llusirales a sort.",
    "type": "FigureCaption",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 25
    }
  },
  {
    "element_id": "84ac7b51b3889b579441cecfd61b0932",
    "text": "Figure 2.5.11-18 Illustrates a Sort process",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 25
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 25
    }
  },
  {
    "element_id": "10daff2eb4e1a589ab8464454d9e2eb1",
    "text": ") An off-page connector is represented by a circle and arrow. Avoid continuation pages because they make the data ﬂow diagram less readable. When a data ﬂow diagram must be continued onto another page and the diagram remains at the same level of decomposition, then, the off-page connector may be used. Write the sending and receiving page numbers within the respective circles. To avoid confusion, make the circles smaller than the process bubbles on your data ﬂow diagram. Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 25
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 25
    }
  },
  {
    "element_id": "c0d89058c8e5a8cfe76dc4795d5e843b",
    "text": "illustrates the conventions used to depict off-page connectors.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 25
    }
  },
  {
    "element_id": "e3b0c44298fc1c149afbf4c8996fb924",
    "text": "",
    "type": "FigureCaption",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 25
    }
  },
  {
    "element_id": "27b3c611fd5e080ac90f9341db6de905",
    "text": "Figure 2.5.11-19 Conventions used to depict Off-Page Connectors",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 25
    }
  },
  {
    "element_id": "ddce1c2d4f16cf9a72e1094503263cb8",
    "text": "Data streams and groups of data elements contained within these Data Stores and all components referenced in the process speciﬁcations",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 25
    }
  },
  {
    "element_id": "97ecb2383b9da63f7d1195c993b3c000",
    "text": "a. Data Element : This is the smallest piece of data that is not further de",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 26
    }
  },
  {
    "element_id": "3088c1cddfc11c0ff50ab351b28359ea",
    "text": "composed. b. Data Group : This is a data structure that consists of other data groups and/or data elements. c. Data Stream (also called data ﬂow) : This is a pipeline along which in",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 26
    }
  },
  {
    "element_id": "1e86a45da820734f8e048427ffa09590",
    "text": "formation of known composition is passed, also termed as data in motion/ data in transit. Note: Data streams are not deﬁned as separate entities in the system glossary; each data stream is a ﬂow consisting of either a data group or a data element. d. Data Store : This is a temporary repository of data, and is termed as at rest. Data at rest also refers to data that is not actively moving from device to device, or network to network after the data arrives at its ﬁnal destination.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 26
    }
  },
  {
    "element_id": "1baeaf6918226a39e36f6671b3756fbc",
    "text": "Analysis Techniques and Deliverables 2.5.11",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 27
    }
  },
  {
    "element_id": "11ed8df34c0b094d0392dc36d850d081",
    "text": "Criteria Description Symbolic links The typing is based on the ﬁle to which the object is linked.",
    "type": "UncategorizedText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 27
    }
  },
  {
    "element_id": "dd7da24d8b5592dd4e0d6bad3f046c70",
    "text": "The following attributes describe and deﬁne the system components. They provide information critical to understanding the system under description:",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 27
    }
  },
  {
    "element_id": "68374533d3a1fd80113f461b4230ef56",
    "text": "A single data element may constitute a data stream; this is indicated on a data ﬂow diagram when the element name is assigned to an arrow.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 27
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 27
    }
  },
  {
    "element_id": "e8f24dd847514767dd37ac4ab78220e9",
    "text": ") The following attributes deﬁne the data streams/elements: a. Description : A narrative description of the element. b. Values/Meanings : A list of valid values for an element and the meanings of those values. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 27
    }
  },
  {
    "element_id": "9a173b5ea1869287872ad663b69854af",
    "text": ") Use the following cross-references to describe the relationships with other system components: a. Access Key To : An alphabetical listing of data stores for which this data element is an access key. b. Aliases/Modiﬁers : An alphabetical listing of other names for the same element (aliases), or qualiﬁers for the element name (modiﬁers). c. Input To : If the element is a data stream, an alphabetical listing of processes that, as input accept the data stream. Internal Revenue Manual",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 27
    }
  },
  {
    "element_id": "f76a766222083707dceec966d42111f0",
    "text": "The following attributes deﬁne the data streams/elements:",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 27
    }
  },
  {
    "element_id": "8bdb4b6e220b9c8f3f391ef5cef70e4a",
    "text": "Access Key To : An alphabetical listing of data stores for which this data element is an access key. Aliases/Modiﬁers : An alphabetical listing of other names for the same element (aliases), or qualiﬁers for the element name (modiﬁers). Input To : If the element is a data stream, an alphabetical listing of processes that, as input accept the data stream.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 27
    }
  },
  {
    "element_id": "e6413e5e0376c4b828506b9981fd0bb0",
    "text": "d. Output Of : If the element is a data stream, an alphabetical listing of processes which are sources of the data stream. e. Part Of : An alphabetical listing of data groups which contain this element. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 28
    }
  },
  {
    "element_id": "9e60207bad9f27963b38c83f09e10875",
    "text": ") Label all data streams with meaningful names and applicable naming standards. When a data stream has been logically transformed and this needs to be distinguished, do not create a new data name. Use a modiﬁer to qualify the name and place it in parentheses after the data stream name. Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 28
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 28
    }
  },
  {
    "element_id": "c597eb8fd88630e213f894e907b22bac",
    "text": "depicts data streams with modiﬁed names. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 28
    }
  },
  {
    "element_id": "7aba049f7adf7a396de81bfc5d38dda9",
    "text": ") For more guidance on naming data, see IRM",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 28
    }
  },
  {
    "element_id": "40e8602ee2fd3bbdfeb81be0d7a27077",
    "text": "Information Technology, Data Engineering, Naming Data Element(s)/Object(s). (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 28
    }
  },
  {
    "element_id": "66f0f8b303260573e7688032acbf1b0f",
    "text": ") A group may be a data stream, or it may be a component part of a larger group, data stream, or data store. The following attributes deﬁne the data streams/groups: a. Description : A narrative description of the group. b. Contains : A list of the elements and/or subordinate groups which consti- tute the data stream/group being deﬁned; symbols are used to show the relationships between the contents. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 28
    }
  },
  {
    "element_id": "78d4b57f9fe54ea74a674006774df146",
    "text": ") Use the following cross-references to describe the relationships with other system components: a. Access Key To : An alphabetical listing of data stores for which this data group is an access key. b. Aliases/Modiﬁers : An alphabetical listing of other names for the same group (aliases), or qualiﬁers for the group name (modiﬁers). c. Input To : If the group is a data stream, an alphabetical listing of processes that, as input, accept the data stream. d. Output Of : If the group is a data stream, an alphabetical listing of processes which are sources of the data stream. e. Part Of : An alphabetical listing of larger data groups which contain this group. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 28
    }
  },
  {
    "element_id": "818b665f76c4fe71e7b3b04941b876b3",
    "text": ") The following attributes deﬁne the data store: a. Description : A narrative description of the data store.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 28
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 28
    }
  },
  {
    "element_id": "e14e7052469e3e9f687217705577fd5f",
    "text": ") Use the following cross-references to describe the relationships with other system components: a. Access Key To : An alphabetical listing of data stores for which this group is an access key. b. Aliases/Modiﬁers : An alphabetical listing of other names for the same group (aliases), or qualiﬁers for the group name (modiﬁers). c. Input To : If the group is a data stream, an alphabetical listing of processes that, as input, accept the data stream. d. Output Of : If the group is a data stream, an alphabetical listing of processes which are sources of the data stream. e. Part Of : An alphabetical listing of larger data groups which contain this group. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 28
    }
  },
  {
    "element_id": "d124f85074d8d46177ccacb8d7ba810e",
    "text": ") The following attributes deﬁne the data store: a. Description : A narrative description of the data store. b. Constraints : A narrative description of items, rules, regulations, etc. affecting the data store; e.g., required password security or response time criteria for database access. c. Contains : A list of the elements and/or groups which constitute the store; symbols are used to show the relationships between the contents. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 28
    }
  },
  {
    "element_id": "0c698cfe2b921163a7e6a1bc094b56c6",
    "text": ") Other data store deﬁnition related information: a. Accessed By : This is an alphabetical listing of processes or external entities which use this data store as a source; the data store is shown an input to these processes or external entities on the data ﬂow diagram b. Updated By : This is an alphabetical listing of processes or external entities which change or reorder the contents of the data store. c. Aliases/Modiﬁers : This is an alphabetical listing of other names for same data store (aliases), or qualiﬁers for the data store name (modiﬁers).",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 28
    }
  },
  {
    "element_id": "975ac72adf854090216da345c790c957",
    "text": "a. Access Key To : An alphabetical listing of data stores for which this data group is an access key. b. Aliases/Modiﬁers : An alphabetical listing of other names for the same group (aliases), or qualiﬁers for the group name (modiﬁers). c. Input To : If the group is a data stream, an alphabetical listing of processes that, as input, accept the data stream. d. Output Of : If the group is a data stream, an alphabetical listing of processes which are sources of the data stream. e. Part Of : An alphabetical listing of larger data groups which contain this group.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 28
    }
  },
  {
    "element_id": "9b1d35341180abd04434fb4d9fb21769",
    "text": "Contains : A list of the elements and/or groups which constitute the data store; symbols are used to show the relationships between the contents.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 28
    }
  },
  {
    "element_id": "a1f84951756496d3bf48432464c866d2",
    "text": "a. Accessed By : This is an alphabetical listing of processes or external entities which use this data store as a source; the data store is shown as an input to these processes or external entities on the data ﬂow diagram b. Updated By : This is an alphabetical listing of processes or external entities which change or reorder the contents of the data store. c. Aliases/Modiﬁers : This is an alphabetical listing of other names for the same data store (aliases), or qualiﬁers for the data store name (modiﬁers).",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 28
    }
  },
  {
    "element_id": "1baeaf6918226a39e36f6671b3756fbc",
    "text": "Analysis Techniques and Deliverables 2.5.11",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 29
    }
  },
  {
    "element_id": "18096e1ab9b02cec82eafc7b043ac02d",
    "text": "Part Of : This is an alphabetical listing of larger data stores (such as a database) which contain this element.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 29
    }
  },
  {
    "element_id": "70ca34c61e6a9a1d2e6cc95e45eaca45",
    "text": "Description : This is a narrative description of the external entity. Provides : This is an alphabetical listing of data stream(s), which the external entity provides as input to the system. Receives : This is an alphabetical listing of data stream(s), which the external entity receives as output from the system.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 29
    }
  },
  {
    "element_id": "a7b786187abaafc34f50e4a2d6668c9a",
    "text": "Unless the use of an automated data dictionary precludes usage, then refer to Figure 2.5.11-22 for the symbols to be used to list the contents of data.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 29
    }
  },
  {
    "element_id": "607a5d3a20c73324ba9c4c16ed3ac072",
    "text": "olWeaning& sqntsond (sequence T mporar]nd (sequence s mpoctan]pper ik owertiritTorabons of ho component (5 sxcosed eparonthesos;lower i s e numbes rom 0o, ppes it .3 umbes rom 1 o1 IfthoIower it scuais 0, hen the componentsde) soptonal I ha upper it oquein ren theGomponeni(s) can repeat an ndefinte amount oftmes. A component it any parenihesis roundindiates s somolimes present, and ¢ prosen’,i does ot repea (1 appears on one tme).Te - or, sefect ne of e optons enciosedo brackels. Brackets aro used to deimi esitement.",
    "type": "FigureCaption",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 29
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 29
    }
  },
  {
    "element_id": "bee24e20c592b0591a9dd0377915adb1",
    "text": ") Exhibit",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 29
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 29
    }
  },
  {
    "element_id": "4b1a5d116848c82afe47c90aa058c19f",
    "text": "provides the symbols used to deﬁne data. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 29
    }
  },
  {
    "element_id": "6373af0405c24e2a38251fe7e8b4246e",
    "text": ") An alias is a data name that is synonymous with a more commonly accepted data name of a data stream, data store, data group, or data element. An alias is created when the same data is labeled with more than one data name (i.e., the commonly accepted name and the alias name(s)). See IRM",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 29
    }
  },
  {
    "element_id": "d8e4d3d6ee9b99a213de9b26e06d3c34",
    "text": "Infor- mation Technology, Data Engineering, Naming Data Element/Objects for more data naming guidance.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 29
    }
  },
  {
    "element_id": "13e820aae58a4fb4c5d4605769950834",
    "text": "An alias is a data name that is synonymous with a more commonly accepted data name of a data stream, data store, data group, or data element. An alias is created when the same data is labeled with more than one data name (i.e., the commonly accepted name and the alias name(s)). See IRM 2.152.3 Infor- mation Technology, Data Engineering, Naming Data Element/Objects for more data naming guidance.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 29
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "a5f8785d11f61af3bdd2841d39122d9a",
    "text": ") Approved Aliases (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "262e5d6e4bcc6a949007c5cbb9a22c06",
    "text": ") Aliases generally occur for three reasons: a. Different users have different names for the same form, etc. b. An analyst inadvertently introduces an alias in the data ﬂow diagram. c. Two analysts working independently with the same data stream give it different names.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "63ac5dec3184efdb4e0d0e6f1c0e67ab",
    "text": ") Transition to Design (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "1b10af9e6887594edd37cf60b152c000",
    "text": ") This section provides guidance on using the results from analysis as the for software design.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "2aa753f1bd97bd3dabbc46f06090e8ba",
    "text": ") Partitioning the Data Diagrams (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "2cf5836216e03d05986a6a3028e7061c",
    "text": ") If a data ﬂow diagram has not been evenly partitioned, the diagram will combine some detail and some higher levels of abstraction. In this case, perform a top-down partitioning of the data ﬂow diagram by: a. Replacing any problem bubble by its ″ child ″ network and then connecting the data ﬂows. b. Grouping into sets to minimize interfaces. c. Allocating one top-level bubble per set. d. Renumbering and renaming everything.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "ddc33305e99dfa8d14d57e83835e2fee",
    "text": ") Packaging the Data Flow Diagrams (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "322451ce283d1059dff0db8c914253cf",
    "text": ") As the new physical data ﬂow diagrams are being developed, both the analyst and the designer must consider certain physical details. Unless a data ﬂow diagram is small and limited in function, it will need to be ″ packaged ″ . Packaging is the process of subdividing the data ﬂow diagram processes related groups of processes; and each of these related groups of processes evolves into a separate structure chart that will be created during the software design. The following physical boundaries and constraints have a bearing on the packaging of a data ﬂow diagram set: a. Man/machine boundary-separates manual processes from those performed on computer equipment. b. Hardware boundary-separates processes, which must be performed different types of computer equipment. c. Batch/on-line/real time boundary-various functions of a system may be on-line, real time, or batch mode depending on the speed requirements for data retrieval, display, availability, etc. d. Cycle or timing boundary-some processes must be run daily, while only need to be run once a week, month, or year. e. Commercial software-some processes may be accomplished using vendor-supplied software. f. Security/safety needs-security and safety requirements may cause the addition of otherwise unnecessary boundaries and intermediate data stores. This includes audit, back-up, recovery, and checkpoint/restart quirements. g. Resources-some processes may not be able to be run at the same because of limited resources, (e.g., the job is too large for computer capacity).",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "6dbd5d4683bb2d421b5787a40ad350a1",
    "text": ") Developing Process Speciﬁcations (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "e27689bfd5b4bfca1f5c14cedae1bc03",
    "text": ") All systems, whether structured or not, require descriptions of the procedures that determine how inputs are to be transformed into outputs. As these proce- dures increase in complexity, English narrative descriptions become a more ambiguous and less acceptable means to specify these transformations.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "bbc97495cfcb5bb20928b48f3fe31d04",
    "text": "Systems Development",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "ca50e4fb235c65c970e647a5391da77c",
    "text": "If a data ﬂow diagram has not been evenly partitioned, the diagram will combine some detail and some higher levels of abstraction. In this case, perform a top-down partitioning of the data ﬂow diagram by:",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "7010e347c813dc73599cfcaa20bec1f3",
    "text": "a. Man/machine boundary",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "8cb107557703d9e3961404765dda3b37",
    "text": "separates manual processes from those performed on computer equipment. b. Hardware boundary",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "432ef15fe738918924c3017d3e0b8548",
    "text": "separates processes, which must be performed on different types of computer equipment. c. Batch/on",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "90fca1cdb7154944a6b01e0e3ac68a37",
    "text": "line/real time boundary",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "5b66e45beafb4165ba79fc0e4bf7953f",
    "text": "various functions of a system may be on",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "ca644992e5b39585df97fa79cc2e3993",
    "text": "line, real time, or batch mode depending on the speed requirements for data retrieval, display, availability, etc. d. Cycle or timing boundary",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "be5ad03e3e26f3ec4f5411efdf65d803",
    "text": "some processes must be run daily, while others only need to be run once a week, month, or year. e. Commercial software",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "30c493be5997fa907e9a37a784e5f7dd",
    "text": "some processes may be accomplished using vendor",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "869b833b094db16705d20d3b19fee673",
    "text": "supplied software. f. Security/safety needs",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "747dcfc2a7f46bdc7ab00982d7c7b765",
    "text": "security and safety requirements may cause the addition of otherwise unnecessary boundaries and intermediate data stores. This includes audit, back",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "eb9985558f3c1e00a1dd0db07454fcdc",
    "text": "up, recovery, and checkpoint/restart re",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "79abc3150a8d9b60950a38a0ac0f5630",
    "text": "quirements. g. Resources",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "c9e6fadae8acd209abe5dd9f9eb08e2c",
    "text": "some processes may not be able to be run at the same time because of limited resources, (e.g., the job is too large for computer capacity).",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 30
    }
  },
  {
    "element_id": "1baeaf6918226a39e36f6671b3756fbc",
    "text": "Analysis Techniques and Deliverables 2.5.11",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 31
    }
  },
  {
    "element_id": "4293f247cacf9340839329e2fa2df6cc",
    "text": "This type of process speciﬁcation deﬁnes higher level ″ parent’’ data ﬂow diagram process bubbles. This type of speciﬁcation must contain the descrip- tion attribute; and as applicable contain the constraints attribute.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 31
    }
  },
  {
    "element_id": "dae8dc25c62ae81724303c057f0c7567",
    "text": "Deﬁne the transformation of input data into output data for process speciﬁca-",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 31
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "28c90c8f925f3e33ed5e2adc3bc85669",
    "text": ") Avoid redundancy between the process speciﬁcation, and other tools in the functional speciﬁcation package. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "e6ae92b28629dc263acaf7e81bb9c5c6",
    "text": ") Use the data names as shown in the data ﬂow diagrams, and the date deﬁni- tions in the process speciﬁcation. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "4a66e675b267c7dbb32c387a47f208c4",
    "text": ") Use Structured English decision table, or decision tree format to write the pro- cedures attribute. English for Programmin",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "08219d15254012987d32d5ece230984f",
    "text": "anguage",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "a4841d00c1db6280f8db5000c3fb2918",
    "text": "verview (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "5f7e13871e65f72abafa792bb69a09ec",
    "text": ") Structured English is English-like instructions with a limited selection of sentence structures that reﬂect processing actions. An algorithm can be written in English-like programming syntax without consideration to the actual pro- gramming language for future use. Structured English is used to verify the business logic, which can then be coded in any programming language. Common terms are used, such as IF-THEN-ELSE. English for Programmin",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "08219d15254012987d32d5ece230984f",
    "text": "anguage",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "8cab728fe4fd95c6d00f45ba475f2f7e",
    "text": "ocabulary (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "8c405e07e52ebdb17637e23d2482a9da",
    "text": ") Structured English uses a limited vocabulary consisting of: • Strong action verbs • Direct and indirect objects that are deﬁned in a glossary/data dictionary • As few adjectives and adverbs as possible (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "6776c91b51289b82f4c3d2173647ccd5",
    "text": ") Do not write process speciﬁcations from a physical code-like perspective (i.e., in the worst case they contain detailed instructions as to control, working storage, physical media considerations, switch settings, etc.) as this will cause a signiﬁcant decrease in ″ user friendliness ″ . (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "b1bdae02be948632937d6c39a3fd4f54",
    "text": ") Structured English that is simply pseudocode for program source code defeats the purpose of analysis, limits design options and ﬂexibility, and creates a maintenance headache for analysts. Constructs of English (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "1f44d964db30045478c46e6e05382498",
    "text": ") Structured English also uses a limited statement syntax consisting of simple imperative sentences, closed-end decisions, closed-end repetitions, or any combinations of the above. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "e452f4f5a4c95a5b20db3cc53845dacb",
    "text": ") Constructs have only one entry point and one exit point; they create a linear presentation (one construct is done completely before another construct is begun), thus avoiding the confusion inherent in narratives that skip around. Procedures written in Structured English must be numbered in a consistent manner for readability and referencing purposes. Numbering the constructs helps facilitate citing, or referencing within the Procedures Section of a process speciﬁcation. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "b6a281af4c135c69738830716c7921d3",
    "text": ") All Process Speciﬁcation functions must be described using only the three structs discussed below. Construct (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "bf366528042ad323c788ad7821c4c053",
    "text": ") Use this construct to present a sequence of steps to be taken in order. It consists of imperative sentences, each of which is ended with a period and indented equally in the construct. Indentation signiﬁes the relationships and dependencies of statements within the various constructs. Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "098a57e5d775fd3ca9b4ebc661edf2f7",
    "text": "provides an example of a sequence construct.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "bbc97495cfcb5bb20928b48f3fe31d04",
    "text": "Systems Development",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "909db5fc5b7ed030ab48699d93cba130",
    "text": "Avoid redundancy between the process speciﬁcation, and other tools in the functional speciﬁcation package.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "d0d255fd09f324bbd0461a0eb0ac1515",
    "text": "Structured English is English-like instructions with a limited selection of sentence structures that reﬂect processing actions. An algorithm can be written in English-like programming syntax without consideration to the actual pro- gramming language for future use. Structured English is used to verify the business logic, which can then be coded in any programming language. Common terms are used, such as IF-THEN-ELSE.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "b2c70c659caa0e23e6b1c02af53039dd",
    "text": "Structured English uses a limited vocabulary consisting of:",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "1f913bdd341139dc5bfe5200f9bb7fd6",
    "text": "Use this construct to present a sequence of steps to be taken in order. It consists of imperative sentences, each of which is ended with a period and is indented equally in the construct. Indentation signiﬁes the relationships and dependencies of statements within the various constructs. Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "098a57e5d775fd3ca9b4ebc661edf2f7",
    "text": "provides an example of a sequence construct.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 32
    }
  },
  {
    "element_id": "1b9cc817e5e8b0b2e1708084e3aad10a",
    "text": "‘Writo PURCHASE-ORDER for ORDERED-TEM.‘Solect SUPPLIER based on ORDERED-TEM.CODE.List SUPPLIER chosen in SUPPLIER-CATALOG.Write SUPPLIER into NEW-STOCK-REQUEST.",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 33
    }
  },
  {
    "element_id": "ed6566ab3a8177e4c7e358d53d2931c3",
    "text": "Figure 2.5.11-23 Sequence Construct",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 33
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 33
    }
  },
  {
    "element_id": "f617135ab656a81288bf501910d54477",
    "text": ") Use this type of construct to select an action from among mutually exclusive alternative actions based upon the outcome of a speciﬁc condition. There are two versions of this construct, the If-Then-Else format and the Select-Case format. a. Use the “If-Then-Else” format when there are only two alternatives. b. Write the “Else” or the “Then” statement of the decision showing no action when there is no action to be taken. c. The “Else” statement may be omitted (unless it is being used as an end marker for readability).",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 33
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 33
    }
  },
  {
    "element_id": "d8199ad50db2f518827e512e02c2873d",
    "text": ") Use this type of construct to select an action from among mutually exclusive alternative actions based upon the outcome of a speciﬁc condition. There are two versions of this construct, the If-Then-Else format and the Select-Case format.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 33
    }
  },
  {
    "element_id": "1a80e8b865a8f28e678a60379a596501",
    "text": "a. Use the “If",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 33
    }
  },
  {
    "element_id": "0597f441dcca7c9bb0a79da4d94d03c5",
    "text": "Then",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 33
    }
  },
  {
    "element_id": "371f97ff2af6482a9a950d37ba1b911f",
    "text": "Else” format when there are only two alternatives. b. Write the “Else” or the “Then” statement of the decision showing no action when there is no action to be taken. c. The “Else” statement may be omitted (unless it is being used as an end marker for readability).",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 33
    }
  },
  {
    "element_id": "c04cc97545ad1bd1c02ba35f0dc5440f",
    "text": "(action taken when condition is met)",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 33
    }
  },
  {
    "element_id": "7d708807b47c09ee6447d0a78fa22274",
    "text": "{action taken when condition is not met)",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 33
    }
  },
  {
    "element_id": "1966f9a3119bc3d00d6da796bb558897",
    "text": "(3) Figure 2.5.11-25 provides an example of an If-Then-Else Decision Construct.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 33
    }
  },
  {
    "element_id": "7cf5bf88a31ce698d4350c610cf22d16",
    "text": "Figure 2.5.11-25 Decision Construct",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 33
    }
  },
  {
    "element_id": "8f74bfffd8b3995f18ec4f90a0f43b67",
    "text": "(4) Use the “Select-Case” format when there are more than two alternatives, each mutually exclusive. Number each case, enclose in parentheses, and end with a",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 33
    }
  },
  {
    "element_id": "ffb76d03759e95d026f09a6e974818f1",
    "text": "comma. Once a case is selected and its action taken, ignore the subsequent case statements. Figure 2.5.11-26 provides an example of a Select-Case Decision Construct.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "b975758c1503f9a17281c6a98295ed14",
    "text": "‘Seloct the case which applies:",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "1f5be66894e5ef6a6919e1f6499a7c1e",
    "text": "Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "09a90eb2b195b25f82f7ece45ef77f32",
    "text": "Decision Construct (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "3fe95d441e367a56aac98e1dbde89665",
    "text": ") Use the “Repetition Construct” to show action performed until some",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "cbb93be15a8a1f3864fbe7559c006005",
    "text": "For each MAINLINE-SUSPENCE-REQ-GRP in the MAIN-SUSPENCE TABLE:",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "ddfd07d819e0046ed5aa6eb8950c858f",
    "text": "the MF",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "d621c1a7169f2ca51bc8674da52e9572",
    "text": "SYSTEM",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "c695164407bfecdaec0c80eabb5ae703",
    "text": "SUSPENSEKEY of the MAINLINE",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "8a4b4797414f8c17185d531d5869a2e1",
    "text": "SUSPENCE",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "fac1a08e86d5ef3982131e241fb09553",
    "text": "REQ",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "caf70cac25aea115dca9400806ed8e1d",
    "text": "GRPeither is X or is equl to the MASTER",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "01631e8962fd9586c61c7d522a0e15d6",
    "text": "FILE.SYSTEM",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "f439c0c9b88c6501091d064348b55487",
    "text": "ID.CODE of the REJECT",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "7eda0dc686ab022f1f2b50929926bd52",
    "text": "DOC,d the TX",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "d6cbb6d58158fd9da7e23247c846a6e8",
    "text": "CLASS KEY oithor s X or s equal o the TX.CLASS",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "be002c2f8f9c786ffd9fcf87f0fb2d3f",
    "text": "CD,and the DOC",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "90ec58127ec472ffb7e3f90c3ee320f8",
    "text": "CD",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "82d23487e69ed159681f20922443b35c",
    "text": "KEY sither is XX or s squal to the DOC",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "1b0d0231cc0e8ee4b6ba641337ba0f73",
    "text": "CD,and the BLOCK",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "f7e99605443cbff450a31db398514672",
    "text": "HEADER",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "7767dc4c21de161857540e98be7369c9",
    "text": "MFT",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "89cfd40e6a2047435e32c2cee7f5e56f",
    "text": "KEY sithor is XXorls equal to the BLOCKHEADER MFTShen,",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "3ad0c7d9371b3cf3488a2210ca67d10f",
    "text": ") Decision tables are a concise, and efficient way of specifying processes which have numerous combinations of conditions in order to perform a speciﬁc action. Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "955c95641689b54740e39e94def2760a",
    "text": "illustrates the format of a decision table. Exhibit",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "ce00346b9d4ec8bfbcfbe1817a56e392",
    "text": "illustrates a procedure, and a decision table that expresses the same procedure.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "6c67981849f0697d154fce2b702adb8b",
    "text": "CondionCondtions ConeActions ActonEnties[ ———",
    "type": "FigureCaption",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "de9e13fed7d930388b5fa3982c3b7463",
    "text": "Figure 2.5.11-28 Format of a Decision Table",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 34
    }
  },
  {
    "element_id": "1baeaf6918226a39e36f6671b3756fbc",
    "text": "Analysis Techniques and Deliverables 2.5.11",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "fdf176ba8e6387008fd93c48d7e19d99",
    "text": "(2) Figure 2.5.11- 29 provides an example of a decision table.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "1f5be66894e5ef6a6919e1f6499a7c1e",
    "text": "Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "d9729f2908cad62b08efc0df4b80711a",
    "text": "Example of a Decision Table (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "1ae473c80c907251087aaca834c6bcff",
    "text": ") A decision table comprises four types of sections, the following explains these sections: • Conditions Section : Lists the conditions or statements that affect the process being speciﬁed and must be considered in performing the process being speciﬁed. • Condition Entries Section : Indicates whether the condition is met or not. This section is subdivided into vertical columns that are generally numbered, and are known as rules. The blocks within the condition entries section, when ﬁlled in, contain the responses to the conditions listed in the conditions section. • Actions Section : Lists those actions that may be taken in order to perform the process. • Action Entries Section : This section is also subdivided into the same vertical columns or rules as the condition entries section. The blocks contain either an ″ X ″ (meaning perform the action) or either a ″ ″ or ″ = ″ (meaning the action does not apply). (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "bee24e20c592b0591a9dd0377915adb1",
    "text": ") Exhibit",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "7f91ab66f476b720cc85ec1c3284a6bc",
    "text": "illustrates the use of a narration and a decision table to describe the same procedure. For the purposes of this exhibit, a procedure determine who will approve the selection and acquisition of contractual services is being used. Tree (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "85f5638eac728a49d9fddc714afd3851",
    "text": ") A decision tree is a graphic representation of a decision table; it communicates the same information in a different form. Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "ef5262bcd800871063b6538a09d36f0c",
    "text": "provides an example of a decision table. Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "a12b52c692266df19bcd54254d5f627a",
    "text": "depicts a decision tree that expresses the decisions expressed in Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "5ecbe488a4e0866a3319a50aeab9a04a",
    "text": "CREDIT RATING T z 3 0 gRRATING EXCELLENT | EXCELLENT | GOOD | G0OD | POGRB ANTOUTSTANGING || =s6000 | >95060CANTTOLEND 500 %00 WoRE",
    "type": "FigureCaption",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "533e386b2d521635c5ba46c79aaf63c3",
    "text": "A decision table comprises four types of sections, the following explains these sections:",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "59e7407ad9319dc278a372c7c419707a",
    "text": "Conditions Section : Lists the conditions or statements that affect process being speciﬁed and must be considered in performing the process being speciﬁed. Condition Entries Section : Indicates whether the condition is met not. This section is subdivided into vertical columns that are generally numbered, and are known as rules. The blocks within the condition entries section, when ﬁlled in, contain the responses to the conditions listed in the conditions section. Actions Section : Lists those actions that may be taken in order to perform the process. Action Entries Section : This section is also subdivided into the same vertical columns or rules as the condition entries section. The blocks contain either an ″ X ″ (meaning perform the action) or either a ″ ″ or ″ = ″ (meaning the action does not apply).",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "bee24e20c592b0591a9dd0377915adb1",
    "text": ") Exhibit",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "6b704aa993a9fe9df33b38e8ec9a29d1",
    "text": "illustrates the use of a narration and a decision table to describe the same procedure. For the purposes of this exhibit, a procedure to determine who will approve the selection and acquisition of contractual services is being used. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "85f5638eac728a49d9fddc714afd3851",
    "text": ") A decision tree is a graphic representation of a decision table; it communicates the same information in a different form. Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "ef5262bcd800871063b6538a09d36f0c",
    "text": "provides an example of a decision table. Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "a12b52c692266df19bcd54254d5f627a",
    "text": "depicts a decision tree that expresses the decisions expressed in Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 35
    }
  },
  {
    "element_id": "f1e3974009621bfdfb0fc2fe9644a553",
    "text": "Figure 2.5.11-30 Decision Tree",
    "type": "FigureCaption",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 36
    }
  },
  {
    "element_id": "1f5be66894e5ef6a6919e1f6499a7c1e",
    "text": "Figure",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 36
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 36
    }
  },
  {
    "element_id": "0730b8e8d8f247fe9635fea25ad4eaa7",
    "text": "Decision Tree (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 36
    }
  },
  {
    "element_id": "b1437d8eb0a9635e07ab4b5f0d262096",
    "text": ") Some processes are shared by different systems, or are used more than once within a single system. These common processes are designated by adding the suffix ″ (COMMON) ″ , capitalized and placed in parentheses, to the end of the process name. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 36
    }
  },
  {
    "element_id": "53c744686cbaed45a9454e2977206bc5",
    "text": ") In addition to the three attributes which apply to all process speciﬁcations, there are three cross-references associated with common process speciﬁca- tions: • Maintained by the organizational identiﬁcation (branch, section, etc.) of those who have maintenance responsibility • Last Revision month, day, and year of the latest revision • Used By organizations that use the Process Speciﬁcations (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 36
    }
  },
  {
    "element_id": "6039439519b56e433fc076cc66656554",
    "text": ") The ﬁrst appearance of the common process speciﬁcation in a data ﬂow diagram set must list the “Description” attribute; may list the “Constraints” and “Procedures” attributes; and must list the “Maintained By” and “Last Revision” cross-references. Any subsequent occurrences of the common process speciﬁ- cation need only list the “Description” attribute. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 36
    }
  },
  {
    "element_id": "be90d5d88bbed42996797d070592b38a",
    "text": ") Each common process speciﬁcation is the maintenance responsibility of one project team or organizational area, and only those responsible are authorized to make changes to a speciﬁcation. Any organizational area may use the speciﬁcation, but the group with the maintenance responsibility must notify the users of any changes and revisions. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 36
    }
  },
  {
    "element_id": "bee24e20c592b0591a9dd0377915adb1",
    "text": ") Exhibit",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 36
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 36
    }
  },
  {
    "element_id": "17fd7543d42838529c62ad26d433867b",
    "text": "provides an example of the ﬁrst and then subsequent occur- rence of a common process speciﬁcation.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 36
    }
  },
  {
    "element_id": "59bc70806e37944a2d593f695ad2b9fb",
    "text": "In addition to the three attributes which apply to all process speciﬁcations, there are three cross-references associated with common process speciﬁca-",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 36
    }
  },
  {
    "element_id": "1baeaf6918226a39e36f6671b3756fbc",
    "text": "Analysis Techniques and Deliverables 2.5.11",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 37
    }
  },
  {
    "element_id": "5517842f013a24406fab36f3f5b420fb",
    "text": "System (CASE) (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 37
    }
  },
  {
    "element_id": "72cf96a40b133c49cebab73c75931c2a",
    "text": ") CASE is a technique that uses powerful and programs/software to help system analysts or programmers develop and maintain information systems. Some CASE tools obtain speciﬁcations and generate the codes. CASE is to ensure a high-quality defect-free software development, and reduce the amount of repeatable work. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 37
    }
  },
  {
    "element_id": "7dd4735d519470366c0db93e8e472cc4",
    "text": ") CASE ensures a check-pointed and disciplined approach, and assist designers, developers, testers, managers, and stakeholders to collaborate on the project milestones. The types of CASE tools are: a. Upper CASE - Tools used in planning, analysis and design stages of SDLC. b. Lower CASE - Tools used in implementation, testing and maintenance. c. Integrated CASE - Combination of Upper CASE + Lower CASE tools. d. Report Generator - A computer program whose purpose is to take data from a source such as a database, XML stream or a spreadsheet, and use it to create a document format. e. Analysis Tools - Used to eliminate inconsistent, or incorrect speciﬁcation through the creation of diagram and data ﬂow. f. Central Repository - A central place of storage where product speciﬁca- tions, requirement documents, related reports and diagrams e.g. in the IRS “Do",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 37
    }
  },
  {
    "element_id": "c2c26234cd03068d00618d95c49ba483",
    "text": "T” is a primary central repository. g. Code Generator - A tool or resource that generates code from a pro- gramming language such as converting syntax to machine language can be read by the computing system. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 37
    }
  },
  {
    "element_id": "3b6eadd239027557b272205d89286cda",
    "text": ") The categories of CASE Tools are: a. Analysis - This tool helps with obtaining requirements check for any in- consistency, errors in the diagrams, data redundancies or erroneous omissions (software example Accept",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 37
    }
  },
  {
    "element_id": "3ebe74334cffba8c9a08f71cd990c50b",
    "text": "). b. Change Control - This pertains to changes made to the software after the baseline is ﬁxed, or when the software is ﬁrst released, and provides Automatic Change Tracking, File Management, Code Management. Change Control relates to the following models: Kotter’s",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 37
    }
  },
  {
    "element_id": "cf4e3e62701244bb70fe8b327f0656be",
    "text": "Change Model - See John Kotter’s Eight Step Change Model https://portal.ct.gov/-/media/SDE/Turnaround/School-Improvement- Resources/Kotters_model.pdf . Note: This “Kotters Model ”website link will work better if viewed in “Edge”. Kurt Lewin’s Change Model - Kurt Lewin used the analogy of how ice block changes its shape to transform into a cone of ice to represent change.(Unfreeze - Change - Freeze), see https://www. managementstudyguide.com/kurt-lewins-change-management-model.htm ADKAR Analysis - Represents: “A” = Awareness,“ D” = Desire, “K ”= Knowledge, “A” = Ability, and “R”= Reinforcement, see https://www.prosci. com/adkar/adkar-model . c. Conﬁguration Management - This pertains to automatic tracking of sion, Revision and Release management, Baseline Conﬁguration man- agement, and Change Control (software example Git and Fossil). d. Design - Used to help the software designer to design the block struc- ture of the software. Provides detailing of each module and interconnec-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 37
    }
  },
  {
    "element_id": "20bbba14dfe28a068a194651d35d5f07",
    "text": "Upper CASE - Tools used in planning, analysis and design stages of SDLC. Lower CASE - Tools used in implementation, testing and maintenance. Integrated CASE - Combination of Upper CASE + Lower CASE tools. Report Generator - A computer program whose purpose is to take data from a source such as a database, XML stream or a spreadsheet, and use it to create a document format. Analysis Tools - Used to eliminate inconsistent, or incorrect speciﬁcation through the creation of diagram and data ﬂow. Central Repository - A central place of storage where product speciﬁca- tions, requirement documents, related reports and diagrams e.g. in the IRS “Do",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 37
    }
  },
  {
    "element_id": "caf180c31ced3d78bef737bf420c0c88",
    "text": "T” is a primary central repository. Code Generator - A tool or resource that generates code from a pro- gramming language such as converting syntax to machine language that can be read by the computing system.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 37
    }
  },
  {
    "element_id": "b03977bf88270240f6f5170b450f9ece",
    "text": "Analysis - This tool helps with obtaining requirements check for any in- consistency, errors in the diagrams, data redundancies or erroneous omissions (software example Accept",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 37
    }
  },
  {
    "element_id": "d2342316056cd5ed6aa5be1844694b98",
    "text": "). Change Control - This pertains to changes made to the software after the baseline is ﬁxed, or when the software is ﬁrst released, and provides Automatic Change Tracking, File Management, Code Management. Change Control relates to the following models: Kotter’s",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 37
    }
  },
  {
    "element_id": "4d8a3a9bef7ace8318a959c9464a5a04",
    "text": "Change Model - See John Kotter’s Eight Step Change Model https://portal.ct.gov/-/media/SDE/Turnaround/School-Improvement- Resources/Kotters_model.pdf .",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 37
    }
  },
  {
    "element_id": "077365be1f63541d49bd5a162f40bcd5",
    "text": "Note: This “Kotters Model ”website link will work better if viewed in “Edge”.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 37
    }
  },
  {
    "element_id": "781cc3694c5e5e22f72e15dc3fcf13b4",
    "text": "Kurt Lewin’s Change Model - Kurt Lewin used the analogy of how an ice block changes its shape to transform into a cone of ice to represent",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 37
    }
  },
  {
    "element_id": "2752ddd27ae533c0a9721008f7692d80",
    "text": "Kurt Lewin’s Change Model - Kurt Lewin used the analogy of how an ice block changes its shape to transform into a cone of ice to represent change.(Unfreeze - Change - Freeze), see https://www. managementstudyguide.com/kurt-lewins-change-management-model.htm . ADKAR Analysis - Represents: “A” = Awareness,“ D” = Desire, “K ”= Knowledge, “A” = Ability, and “R”= Reinforcement, see https://www.prosci. com/adkar/adkar-model . c. Conﬁguration Management - This pertains to automatic tracking of Ver- sion, Revision and Release management, Baseline Conﬁguration man- agement, and Change Control (software example Git and Fossil). d. Design - Used to help the software designer to design the block struc- ture of the software. Provides detailing of each module and interconnec- tions among modules. (software examples: Smar",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 37
    }
  },
  {
    "element_id": "917b32ec4b11cf08bd8bbcb563d52de6",
    "text": "ear-Read",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 37
    }
  },
  {
    "element_id": "6bc32abe3358e93599d4e4f0cbde109c",
    "text": "PI and Soa",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 37
    }
  },
  {
    "element_id": "39e431e5e27ac551cb791848cbdc847e",
    "text": "I).",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 37
    }
  },
  {
    "element_id": "f7d5f5f8fae75d1b49d8ad43c117bc21",
    "text": "e. Diagramming (Forward engineering) - Used for diagrammatic and graphical depictions of the data and system processes; (software ex- ample - MS Visio). f. Documentation - Generates documents for technical and end users, e.g. Training, User, and Installation manuals (software example - MS Office). g. Maintenance - Provides automatic logging and error reporting, error ticket generation, and root cause analysis (software example - Bugzilla for defect tracking, ). h. Process Modelling - The process for creating software process models which is used to develop software, and help the managers to choose a process model or modify it as per the requirement of software product. i. Programming (Reverse engineering) - These tools consists of program- ming environments like Integrated Development Environment (IDE), with in-built modules library and simulation tools, and provide all-inclusive help in building software product and include features for simulation and testing (software example - Eclipse). j. Project Management - Use for project planning, cost and effort estimation, project scheduling and resource planning (software example - MS Project). k. Prototyping - Simulated version of the intended software product, and provides the initial mock-up of the product and simulates a few aspects of the actual product, (software examples: Serena Prototype Composer and Mockup Builder). l. Quality Assurance - Software that monitors the engineering process and methods adopted to develop the software product to ensure conformance of quality according to organization standards (software examples: App",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "e88bf6a78621cde5f750a1b64b57c49b",
    "text": "atch, Eclipse Junit, and Soa",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "e58f1ef91a27ec2a8530358230636e99",
    "text": "est). m. Web Development - Assist in designing web pages with all the elements: forms, text, script, and graphic (software examples: Adobe Edge Inspect, Foundation",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "e6894d3383beb1a87a57e47d3d18305d",
    "text": "and Brackets).",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "117793a8573b0d9c7f8d4b9bf1ec5980",
    "text": "e. Diagramming (Forward engineering) - Used for diagrammatic and graphical depictions of the data and system processes; (software ex- ample - MS Visio). f. Documentation - Generates documents for technical and end users, Training, User, and Installation manuals (software example - MS Office). g. Maintenance - Provides automatic logging and error reporting, error ticket generation, and root cause analysis (software example - Bugzilla for defect tracking, ). h. Process Modelling - The process for creating software process models which is used to develop software, and help the managers to choose process model or modify it as per the requirement of software product. i. Programming (Reverse engineering) - These tools consists of program- ming environments like Integrated Development Environment (IDE), with in-built modules library and simulation tools, and provide all-inclusive in building software product and include features for simulation and (software example - Eclipse). j. Project Management - Use for project planning, cost and effort estimation, project scheduling and resource planning (software example - MS Project). k. Prototyping - Simulated version of the intended software product, and provides the initial mock-up of the product and simulates a few aspects the actual product, (software examples: Serena Prototype Composer and Mockup Builder). l. Quality Assurance - Software that monitors the engineering process and methods adopted to develop the software product to ensure conformance of quality according to organization standards (software examples: App",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "e88bf6a78621cde5f750a1b64b57c49b",
    "text": "atch, Eclipse Junit, and Soa",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "e58f1ef91a27ec2a8530358230636e99",
    "text": "est). m. Web Development - Assist in designing web pages with all the elements: forms, text, script, and graphic (software examples: Adobe Edge Inspect, Foundation",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "e6894d3383beb1a87a57e47d3d18305d",
    "text": "and Brackets).",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "27beeb899964aa1e9c923d58671c62aa",
    "text": ") Advantages of the CASE (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "5c8b8f07d25962371a6e499887c2546f",
    "text": ") The advantages of using CASE models are: a. When the emphasis is placed on software redesign and testing, the servicing cost of a product over the life cycle is reduced. b. The overall quality of the product is improved as an organized approach is sought during the development process. c. Opportunities to meet real-world requirements are more easily achievable with a computer-aided software engineering approach. d. Provide a source of higher quality end products that efficiently fulﬁll the user requirements.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "9a8ce69649f5b07ba20bfd6ef24ee91c",
    "text": ") Application Development (JAD) Methodology (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "073de7132dcb8336ffb2d7be086280c2",
    "text": ") Joint Application Development (JAD) is a methodology that involves user- oriented fact-ﬁnding techniques for obtaining system speciﬁcations requirements pertaining to future development projects. A series of workshops must be organized with teams composed of end users, management, IT staff, and other relevant stakeholders. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "09322b81e062bd695091e3b8698451a6",
    "text": ") The features of the Joint Application Development Model are: a. Structured and focused. b. Elimination of errors. c. Forum for researching various talking points. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "d3741a1d51362db9d746b241edd76199",
    "text": ") Three RAD categories are:",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "62cf7110aed5fda76a1fc6bef56ca135",
    "text": "of the CASE (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "8d7c6205a1e73efad0f2e721a530dc8e",
    "text": ") The advantages of using CASE models are: a. When the emphasis is placed on software redesign and testing, the servicing cost of a product over the life cycle is reduced. b. The overall quality of the product is improved as an organized approach is sought during the development process. c. Opportunities to meet real-world requirements are more easily achievable with a computer-aided software engineering approach. d. Provide a source of higher quality end products that efficiently fulﬁll the user requirements. Application (JAD) (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "073de7132dcb8336ffb2d7be086280c2",
    "text": ") Joint Application Development (JAD) is a methodology that involves user- oriented fact-ﬁnding techniques for obtaining system speciﬁcations requirements pertaining to future development projects. A series of workshops must be organized with teams composed of end users, management, IT staff, and other relevant stakeholders. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "09322b81e062bd695091e3b8698451a6",
    "text": ") The features of the Joint Application Development Model are: a. Structured and focused. b. Elimination of errors. c. Forum for researching various talking points. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "d3741a1d51362db9d746b241edd76199",
    "text": ") Three RAD categories are:",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "ea232a5ffd3ef4b4bd30d27d4ef6a860",
    "text": "When the emphasis is placed on software redesign and testing, the servicing cost of a product over the life cycle is reduced. The overall quality of the product is improved as an organized approach is sought during the development process. Opportunities to meet real",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "9dafd99c93c5e7020d305fb72ded383d",
    "text": "world requirements are more easily achievable with a computer",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "c8e754930e131afa55da91c4794609ed",
    "text": "aided software engineering approach. Provide a source of higher quality end products that efficiently fulﬁll the user requirements.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 38
    }
  },
  {
    "element_id": "ad7de34ee024526ce33f750879d0fd66",
    "text": "a. Phased development - Bread into a series of versions that are developed sequentially. b. Prototyping - Building a scaled-down working version of the system. c. Throw-away prototyping - Design prototype where risks are minimized (RAD) (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 39
    }
  },
  {
    "element_id": "804c9a40b6af3a7c0c6c6480f308bcfb",
    "text": ") Rapid Application Development is a type of Agile software development that was created during the",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 39
    }
  },
  {
    "element_id": "dae692554c1c768cf1a222cab67944f8",
    "text": "s. Its invention was a direct result of the drawbacks of regressive traditional development models such as the Waterfall Software Development Model. One of the major ﬂaws in the Waterfall model once the software enters the testing phase it becomes very difficult to alter core functions and features. Ultimately, resulting with software that might your evolving requirements. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 39
    }
  },
  {
    "element_id": "7533343ab529d961a04422c37abf75af",
    "text": ") The RAD model is based on rapid prototyping and quick feedback from holders over the length of the development and testing cycle with minimum planning. RAD enables low-code rapid application development through business can roll-out new applications faster using IRS teams composed end users, management, and IT staff to complete the projects. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 39
    }
  },
  {
    "element_id": "fce99003eb38a53afe40021810a0704e",
    "text": ") The IRS Requirements Engineering Program Office created the term “Visual- ization” as an alias for prototyping. The concept of Visualization in software development is to allows project teams to quickly produce, document, and verify requirements for any project with a User Interface (UI). This method provides more clarity instead of exclusively using text. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 39
    }
  },
  {
    "element_id": "1da4ddb4cd14020f16b075aad98cd06d",
    "text": ") REPO is currently using “Juntinmind Prototyper” as the enterprise standard tool to create prototypes. Visualization is a valid replacement for the following type of requirements: • Detailed user inputs • Informative text • Navigational ﬂows • Information architecture (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 39
    }
  },
  {
    "element_id": "6f27d18ba748140b04d63dfd1fcc0095",
    "text": ") Use the Rapid Application Development methodology if the following criteria exist: a. The lead Project manager and management’s must have buy-in. b. Clear user requirements must be established. c. The reliability of the future system has been validated. d. Schedule visibility - Must had full knowledge of the project schedule e. Time - There is a tight deadline to meet, and the team must deliver a product that works and is efficient according to customer requirements. Techniques and Deliverables",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 39
    }
  },
  {
    "element_id": "3660315a9af3df255d8f19ab077e4797",
    "text": "page",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 39
    }
  },
  {
    "element_id": "f8629553447a77a48877dcf626490e83",
    "text": "Prototyping - Building a scaled-down working version of the system. Throw-away prototyping - Design prototype where risks are minimized",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 39
    }
  },
  {
    "element_id": "1539b80520d8b1b3f32a7ce518c029ed",
    "text": "The lead Project manager and management’s must have buy",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 39
    }
  },
  {
    "element_id": "16333c943459fb1408ab3d4345c60c4b",
    "text": "in. Clear user requirements must be established. The reliability of the future system has been validated. Schedule visibility",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 39
    }
  },
  {
    "element_id": "b9901fc08591e8fc5eb04a9b02f77b0a",
    "text": "Must had full knowledge of the project schedule Time",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 39
    }
  },
  {
    "element_id": "e5a235042c90db11ca35d66ee5496d59",
    "text": "There is a tight deadline to meet, and the team must deliver a product that works and is efficient according to customer requirements.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 39
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 39
    }
  },
  {
    "element_id": "1c38baf828aa246dce05cb6febc12476",
    "text": ") The primary deliverable that results from structured analysis is a functional speciﬁcation package. After a system is deﬁned using the tools of structured analysis, the resulting documentation must be packaged to derive the func- tional speciﬁcation package.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 39
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "f8dd9bc3ae7066092f924c7ded5f66e7",
    "text": ") Naming standards must be applied. Names, numbers, and all other identiﬁers must be consistent among deliverables where applicable. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "08791078e00cc648178d4b317a7ca3b2",
    "text": ") Standard identifying information must be provided on every page of the analysis documents. Include the following types of information when appli- cable: • System name • Functional Speciﬁcation Package number • Responsible organization (e.g., branch/section) • Operational/Revision date • Project Name/Project Number (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "5ff0f8fe18841be75dc97198db33f1e1",
    "text": ") A functional speciﬁcation package comprises one context diagram. The scope of the functional speciﬁcation package must be consistent with the scope of the context diagram. The functional speciﬁcation package comprises: • Data ﬂow diagrams, which graphically depict business processes and the data interfaces among these processes • Data deﬁnitions, which deﬁne and document the interfaces on the ﬂow diagrams • Process speciﬁcations, which specify the data transformations among the business processes",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "a34f86313d07efeab60b70f6e4677c06",
    "text": ") Flow Diagrams and Speciﬁcations (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "09ff9729fef8786b84ca7246ba4ec956",
    "text": ") The two allowable ways of ordering the data ﬂow diagrams and process ﬁcations within a functional speciﬁcation package. The data ﬂow diagrams must be sequenced in ascending numeric order, and the process speciﬁcations placed immediately behind their associated data ﬂow diagram or grouped together behind the entire data ﬂow diagram set. (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "57a8dafee2a60a788ca1593f5188b108",
    "text": ") To maintain constancy among functional speciﬁcations packages developed a system, one of the following methods must be used for sequencing: • Sequence the Process Speciﬁcation in the same sequential order would appear in if they were interspersed with the data ﬂow diagrams • Sequence the Process Speciﬁcations in ascending numeric order",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "d03502c43d74a30b936740a9517dc4ea",
    "text": ",",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "d03502c43d74a30b936740a9517dc4ea",
    "text": ",",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "d03502c43d74a30b936740a9517dc4ea",
    "text": ",",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "d03502c43d74a30b936740a9517dc4ea",
    "text": ",",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "d03502c43d74a30b936740a9517dc4ea",
    "text": ",",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "d03502c43d74a30b936740a9517dc4ea",
    "text": ",",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "d03502c43d74a30b936740a9517dc4ea",
    "text": ",",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "d03502c43d74a30b936740a9517dc4ea",
    "text": ",",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "d03502c43d74a30b936740a9517dc4ea",
    "text": ",",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "d03502c43d74a30b936740a9517dc4ea",
    "text": ",",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "c4b2896a2081395e282313d6683f07c8",
    "text": ").",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "d189cd1cda13027d3145b13542ecbe9f",
    "text": ") Deﬁnitions (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "cb71ce0b432c6b28dae5ef708f4ed785",
    "text": ") Enter all data deﬁnitions into a system glossary, and/or data dictionary. If a manual system glossary is being used, packaged it into the functional speciﬁ- cation package.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "04daa05ae475004e8a047688ee9476a4",
    "text": ") Displays (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "1331dd2e1ff33e89fae10ea12b3796c0",
    "text": ") In order to fully document a system, add other sections to a functional speciﬁ- cation package. Graphics for projects that use terminals for processing must be organized into a “Screen Display” section.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "32ebb1abcc1c601ceb9c4e3c4faba0ca",
    "text": "(",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "3973e022e93220f9212c18d0d0c543ae",
    "text": "-",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "4fa9d8219b65556e9df2f8b58143de60",
    "text": ") Reports/Layouts (",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "a18713fca45ff82382cbd86340b63378",
    "text": ") Organize graphic formats for printed inputs and outputs such as reports, error registers into a “Print Report Layouts” section.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "bbc97495cfcb5bb20928b48f3fe31d04",
    "text": "Systems Development",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "fe43ef62a1ec2bfedfccfe0bc712947b",
    "text": "Naming standards must be applied. Names, numbers, and all other identiﬁers must be consistent among deliverables where applicable.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "2a77106b6c784d545ace727e5d97583b",
    "text": "Data ﬂow diagrams, which graphically depict business processes and the data interfaces among these processes Data deﬁnitions, which deﬁne and document the interfaces on the data ﬂow diagrams Process speciﬁcations, which specify the data transformations among the business processes",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "263bbfaf0980eccaa802c9f490b66c82",
    "text": "To maintain constancy among functional speciﬁcations packages developed for a system, one of the following methods must be used for sequencing:",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "191a31242fc7fb96de610123a8bc28f8",
    "text": "Organize graphic formats for printed inputs and outputs such as reports, e.g., error registers into a “Print Report Layouts” section.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 40
    }
  },
  {
    "element_id": "1baeaf6918226a39e36f6671b3756fbc",
    "text": "Analysis Techniques and Deliverables 2.5.11",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 41
    }
  },
  {
    "element_id": "38253503d72123e45e71a0903b643173",
    "text": "Add a “Table of Contents” and/or “Cross-Referencing” material to aid the reader in understanding, and following the Functional Speciﬁcation Package (FSP). Develop an alphabetical index of names of external entities, processes, data groups, and data elements; or a listing of external inputs and outputs, and processes to organize a Functional Speciﬁcation Package.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 41
    }
  },
  {
    "element_id": "33c1e29902d678cbcff13d561dbfd825",
    "text": "This Page Intentionally Left Blank",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 42
    }
  },
  {
    "element_id": "1baeaf6918226a39e36f6671b3756fbc",
    "text": "Analysis Techniques and Deliverables 2.5.11",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 43
    }
  },
  {
    "element_id": "39be60d191168c90b092affba3067173",
    "text": "Exhibit 2.5.11-1 (12-13-2021) Format for a Leveled Data Flow Diagram",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 43
    }
  },
  {
    "element_id": "e3b0c44298fc1c149afbf4c8996fb924",
    "text": "",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 43
    }
  },
  {
    "element_id": "3c0fa03c0c44c4a7ec35fce9796c202c",
    "text": "JiH-",
    "type": "FigureCaption",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 43
    }
  },
  {
    "element_id": "e3b0c44298fc1c149afbf4c8996fb924",
    "text": "",
    "type": "FigureCaption",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 43
    }
  },
  {
    "element_id": "e3b0c44298fc1c149afbf4c8996fb924",
    "text": "",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 43
    }
  },
  {
    "element_id": "e3b0c44298fc1c149afbf4c8996fb924",
    "text": "",
    "type": "FigureCaption",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 43
    }
  },
  {
    "element_id": "e3b0c44298fc1c149afbf4c8996fb924",
    "text": "",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 44
    }
  },
  {
    "element_id": "b4550bc4ab9ea57bee4157d625d04f16",
    "text": "his means the data being defined contains data a and data b and data ¢ and data d and",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 44
    }
  },
  {
    "element_id": "cfe5b819107c3f5e8b319615e6aae442",
    "text": "‘This means the data being defined contains data a and data b and data ¢ and data d and.daia e,",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 44
    }
  },
  {
    "element_id": "02fbed9735a03af6267918688582e4b2",
    "text": "This means x is optional but if present it does not repeat; if present it appears only once.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 44
    }
  },
  {
    "element_id": "d3489a8532f34f4e07a16fb3f92999a3",
    "text": "(data name) = 0(x}12",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 44
    }
  },
  {
    "element_id": "66d065a9818b6f3be4bd7beaa701aef6",
    "text": "“Tris means thet the data being defined is equivalent to data x and data x is optional but fpresent t can repeat 1 fo 12 fimes.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 44
    }
  },
  {
    "element_id": "abb1cb5bb9a21d84be88940a51927227",
    "text": "(data name) = [1 () n +1() 310 (9 1)",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 44
    }
  },
  {
    "element_id": "410f9b1ef93c61489076f349e27b768c",
    "text": "‘This means the data being defined is equivalent to: either 1 1o an indefinite number(represented by \"n\" of data x and 1 1o 3 number of data y or 010 1 of data L",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 44
    }
  },
  {
    "element_id": "fcd6eebcde3aa844fe78514379174aeb",
    "text": "This means that the data being defined is equivalent to or contains data x and one of thefolowing sts of data components;y and . a.and ; ¢ and d and p. Thus, the data beingfingd ¢an bo GHhar x 43 ¢ 1107 5+ 8+ b ar £ G+ d ¢ B",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 44
    }
  },
  {
    "element_id": "1baeaf6918226a39e36f6671b3756fbc",
    "text": "Analysis Techniques and Deliverables 2.5.11",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 45
    }
  },
  {
    "element_id": "e3b0c44298fc1c149afbf4c8996fb924",
    "text": "",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 45
    }
  },
  {
    "element_id": "7bd31732a5c91c332ef46b3ee6745d8d",
    "text": "‘The Direclorate of Deta Automation or @ comparable authority at Major‘Command (MAICOM) wil approve he seoction and  scquiston ofnformaton technology coriractual_servces thal cost_less_than$100,000.00. Thesa coniractual services incluce saftware deveopmentand related services. The approval auhory s paragraph 130(4) of AFM3002,",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 45
    }
  },
  {
    "element_id": "c0354ce62f5f6fc72ec1cb7702844b22",
    "text": "‘The Director of Data Automation, Headauarters, Urited States Air Force(DDAHQIUSA), wil approve the  selection snd _soquision ofnformation techlogy contraciual sanvicas that cost from $100.000.00fo $200,00000. These conliacusl services include _softwaredevelopment and related senvices. The approval authoty s paragraph136(6) of AFM 300-2.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 45
    }
  },
  {
    "element_id": "571712219893b8afcb9dbb0ea107e5f2",
    "text": "The Assistent Secretary of the Air Force for Financial Management(SAFIFM) wil approve. he selscion and acauision of iformationfochnology coniraciual servces nat have 8 cost grester than200,000.00. These coniractual services include software developmont2 e senices. Th sprovel auory s pragepn 199(5)of AP",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 45
    }
  },
  {
    "element_id": "3788412603d17c4d55e3920965d66c9c",
    "text": "CondtionsCosl< 100,000Cost> $200,000\"ffo of Appioval. WAJCOWT‘ffo of Approval. DDAHQIUSAF.ffe of Approval SAFIFM.Approval Authordy Paragraph T3a(5] o AFHT 3002‘Approva Authorty Paragraph. 13b(5) of AFM 3002“Approval Authorty Paragraph: T30ié) of AFM 300-2",
    "type": "FigureCaption",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 45
    }
  },
  {
    "element_id": "ce0b4e7b994bb70a6bb96d408ec33936",
    "text": "Exhibit 2.5.11-4 (12-13-2021) Common Process Speciﬁcation Example",
    "type": "Title",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 46
    }
  },
  {
    "element_id": "aff4153fa994d1d943a1ed3174bde8df",
    "text": "Acronyms Terms ACIO Acting Chief Information Officer ACIO AD Associate Chief Information Officer, Application Development AD Application Development BPMN Business Process Modeling Notation DaaS Data as a Service DBMS Database Management System DCOS Deputy Commissioner, Operation Support DFD Data Flow Diagrams DMQA Delivery Management & Quality Assurance EA Enterprise Architecture ELC Enterprise Life Cycle FISMA Federal Information Security Modernization Act of 2014 FSP Functional Speciﬁcation Package IAM Identity & Access Management JAD Joint Application Deployment OMB The Office of Management and Budget OMG Object Management Group MDA Model Driven Architecture SA/SD System Analysis/System Development RAD Rapid Application Deployment RTC Rational Team Concert REPO Requirements Engineering Process Office SDLC Software Development Life Cycle TIGTA Treasury Inspector General Tax Administration UI User Interface UML Uniﬁed Modeling Language",
    "type": "UncategorizedText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 47
    }
  },
  {
    "element_id": "6df60f3d1b06b797dc17eb2a5cfc4db5",
    "text": "This is an international nonproﬁt technology and industry standards consortium. The mission of OMG is to establish and revise technology standards that provide real",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 48
    }
  },
  {
    "element_id": "6700e4ddcc1fbd6e9e25e9e00b226d4d",
    "text": "world value for international end",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 48
    }
  },
  {
    "element_id": "3cd7bca7edb52a792ed974dbff822d0e",
    "text": "users, vendors, government agencies, universities, and research institu",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 48
    }
  },
  {
    "element_id": "976f19a8e8647014fe214771f9e7c3d4",
    "text": "tions as needed.",
    "type": "ListItem",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 48
    }
  },
  {
    "element_id": "400d5ffd5c41bf4239bae8af73cc27e1",
    "text": "The Requirements Engineering Program Office (REPO) of Business Planning and Risk Management (BPRM) is the IRS authority on providing standards and guidance to Requirements Engineering activities, process modeling, and requirements-related solutions.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 48
    }
  },
  {
    "element_id": "d6c1279e0d6688e68fcc7a726ac24fab",
    "text": "Requirements Engineering Process Office",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 48
    }
  },
  {
    "element_id": "189c961be85c3e4b3ed9bd4a320ad1b7",
    "text": "Formerly (RTC) IBM Engineering Workﬂow Management is a collaborative software development tool that teams use to manage all aspects of their work, such as iteration and release planning, change management, defect tracking, source control, and build automation.",
    "type": "NarrativeText",
    "metadata": {
      "filename": "zips/irm02-005-011--2021-12-13.pdf",
      "page_number": 48
    }
  }
]